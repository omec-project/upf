# SPDX-License-Identifier: Apache-2.0
# Copyright 2019 Intel Corporation
# Copyright 2022 Open Networking Foundation
name: Pull Request

on: [pull_request]

concurrency:
  group: ${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  build:
    env:
      DOCKER_REGISTRY: "ghcr.io/omec-project/"
      DOCKER_REPOSITORY: "upf-epc/"
      VERSION: "PR-${{ github.event.pull_request.number }}"
    runs-on: ubuntu-latest
    steps:
      # Checkout and build
      - uses: actions/checkout@v2.4.0

      - name: Generate protobuf
        run: |
          make pb

      - name: Build the BESS-UPF Docker image
        run: |
          DOCKER_TARGETS=bess make docker-build

      - name: Build the PFCP Agent Docker image
        run: |
          DOCKER_TARGETS=pfcpiface make docker-build

      # Format the code
      - name: Clang Format
        run: |
          SRC=$(git ls-tree --full-tree -r HEAD | grep -v vendor/ | grep -e "\.\(c\|h\|cc\|hh\|hpp\|cpp\)\$" | cut -f 2)
          wget https://raw.githubusercontent.com/NetSys/bess/master/core/.clang-format
          clang-format -style=file -i $SRC
          rm .clang-format
      - name: Shell Format
        run: |
          wget -qO shfmt https://github.com/mvdan/sh/releases/download/v3.1.1/shfmt_v3.1.1_linux_amd64
          chmod +x shfmt && sudo mv shfmt /bin
          # https://github.com/mvdan/sh/issues/288
          shfmt -l -w $(shfmt -f . | grep -v vendor/)
      - name: Go Format
        run: |
          make fmt

      - name: Show all CI changes
        run: |
          git --no-pager diff
      # Verify P4 constants
      - name: Build P4 constants
        id: check
        run: |
          make p4-constants
          git update-index --refresh

      # Build again and commit
      - name: Build the BESS-UPF Docker image (after format)
        run: |
          DOCKER_TARGETS=bess make docker-build

      - name: Build the PFCP Agent Docker image (after format)
        run: |
          DOCKER_TARGETS=pfcpiface make docker-build

      - name: Update PR with changes
        uses: gr2m/create-or-update-pull-request-action@v1.x
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          body: |
            Updated with changes from CI
          branch: ${{ github.event.pull_request.head.ref }}
          author: "Github Actions <actions@github>"
          commit-message: "Actions: Updated with changes from CI"

      - id: docker-login
        # Secrets from the main repo are not used if PR comes from fork. We skip pushing Docker image then.
        if: github.event.pull_request.head.repo.full_name == github.repository && github.actor != 'dependabot[bot]'
        uses: docker/login-action@v1.13.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}

      - name: Push Docker image
        if: steps.docker-login.conclusion == 'success'
        run: |
          make docker-push

  # TODO: move to docker.yml after testing
  push-dockerhub:
    env:
      DOCKER_REGISTRY: "docker.io/"
      DOCKER_REPOSITORY: "omecproject/"
      DOCKER_TAG: "master-${{ github.GITHUB_SHA }}"
    runs-on: ubuntu-latest
    steps:
      # Checkout and build
      - uses: actions/checkout@v2.4.0

      - name: Pull old images for caching
        run: |
          docker pull ${DOCKER_REPOSITORY}upf-epc-bess:master-latest
          docker pull ${DOCKER_REPOSITORY}upf-epc-pfcpiface:master-latest

      - name: Build the BESS-UPF Docker images
        run: |
          DOCKER_TARGETS=bess CPU=ivybridge make docker-build
          docker tag ${DOCKER_REPOSITORY}upf-epc-bess:$DOCKER_TAG ${DOCKER_REPOSITORY}upf-epc-bess:$DOCKER_TAG-ivybridge
          docker tag ${DOCKER_REPOSITORY}upf-epc-bess:$DOCKER_TAG ${DOCKER_REPOSITORY}upf-epc-bess:master-latest-ivybridge
          DOCKER_TARGETS=bess CPU=haswell make docker-build
          docker tag ${DOCKER_REPOSITORY}upf-epc-bess:$DOCKER_TAG ${DOCKER_REPOSITORY}upf-epc-bess:master-latest

      - name: Build the PFCP Agent Docker images
        run: |
          DOCKER_TARGETS=pfcpiface CPU=ivybridge make docker-build
          docker tag ${DOCKER_REPOSITORY}upf-epc-pfcpiface:$DOCKER_TAG ${DOCKER_REPOSITORY}upf-epc-pfcpiface:$DOCKER_TAG-ivybridge
          docker tag ${DOCKER_REPOSITORY}upf-epc-pfcpiface:$DOCKER_TAG ${DOCKER_REPOSITORY}upf-epc-pfcpiface:master-latest-ivybridge
          DOCKER_TARGETS=pfcpiface CPU=haswell make docker-build
          docker tag ${DOCKER_REPOSITORY}upf-epc-pfcpiface:$DOCKER_TAG ${DOCKER_REPOSITORY}upf-epc-pfcpiface:master-latest

      - id: docker-login
        # Secrets from the main repo are not used if PR comes from fork. We skip pushing Docker image then.
        if: github.event.pull_request.head.repo.full_name == github.repository && github.actor != 'dependabot[bot]'
        uses: docker/login-action@v1.13.0
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_LOGIN }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Push Docker image
        if: steps.docker-login.conclusion == 'success'
        run: |
          DOCKER_TAG=master-latest make docker-push
          DOCKER_TAG=master-latest-ivybridge make docker-push
          DOCKER_TAG=$DOCKER_TAG make docker-push
          DOCKER_TAG=$DOCKER_TAG-ivybridge make docker-push
