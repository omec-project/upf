From cd82c6369abbf25d04acb0e154e942b49ad83da5 Mon Sep 17 00:00:00 2001
From: Amar Sri <amarsri28@gmail.com>
Date: Sat, 11 Jun 2022 08:50:19 -0700
Subject: [PATCH] sched

---
lib/librte_sched/rte_sched.c | 73 ++++++++++++++-----
 1 file changed, 54 insertions(+), 19 deletions(-)

diff --git a/lib/librte_sched/rte_sched.c b/lib/librte_sched/rte_sched.c
index a858f61f..08b8466c 100644
--- a/lib/librte_sched/rte_sched.c
+++ b/lib/librte_sched/rte_sched.c
@@ -330,9 +330,8 @@ pipe_profile_check(struct rte_sched_pipe_params *params,
 	/* TB rate: non-zero, not greater than port rate */
 	if (params->tb_rate == 0 ||
 		params->tb_rate > rate) {
-		RTE_LOG(ERR, SCHED,
-			"%s: Incorrect value for tb rate\n", __func__);
-		return -EINVAL;
+		RTE_LOG(ERR, SCHED,"%s:Incorrect value for tb rate -> tb_rate=%u, rate=%u\n", __func__,params->tb_rate,rate);
+			return -EINVAL;
 	}
 
 	/* TB size: non-zero */
@@ -400,8 +399,7 @@ subport_profile_check(struct rte_sched_subport_profile_params *params,
 	}
 
 	if (params->tb_rate == 0 || params->tb_rate > rate) {
-		RTE_LOG(ERR, SCHED, "%s: "
-		"Incorrect value for tb rate\n", __func__);
+		RTE_LOG(ERR, SCHED, "%s: Incorrect value for tb rate -> tb_rate=%u, rate=%u\n", __func__,params->tb_rate,rate);
 		return -EINVAL;
 	}
 
@@ -873,6 +871,8 @@ rte_sched_subport_check_params(struct rte_sched_subport_params *params,
 		struct rte_sched_pipe_params *p = params->pipe_profiles + i;
 		int status;
 
+		RTE_LOG(ERR, SCHED,"%s:Incorrect value for tb rate3 -> i=%u, tb_rate=%u, rate=%u\n", __func__,i,p->tb_rate,rate);
+
 		status = pipe_profile_check(p, rate, &params->qsize[0]);
 		if (status != 0) {
 			RTE_LOG(ERR, SCHED,
@@ -2326,7 +2326,8 @@ grinder_credits_check(struct rte_sched_port *port,
 	uint64_t pipe_tb_credits = pipe->tb_credits;
 	uint64_t pipe_tc_credits = pipe->tc_credits[tc_index];
 	int enough_credits;
-
+    RTE_LOG(ERR, SCHED, "%s: pkt_len= %u subport_tb_credits = %u, subport_tc_credits= %u, pipe_tb_credits=%u,pipe_tc_credits=%u\n", __func__,pkt_len,subport_tb_credits,subport_tc_credits,pipe_tb_credits,pipe_tc_credits);
+ 
 	/* Check queue credits */
 	enough_credits = (pkt_len <= subport_tb_credits) &&
 		(pkt_len <= subport_tc_credits) &&
@@ -2645,7 +2646,8 @@ grinder_next_pipe(struct rte_sched_port *port,
 
 	grinder_tccache_populate(subport, pos, pipe_qindex, pipe_qmask);
 	grinder_next_tc(port, subport, pos);
-
+    	RTE_LOG(ERR, SCHED, "%s: ""e_exhausted =20 grinder->pindex= %u, subport->pipe_loop=%u =\n", __func__,grinder->pindex,subport->pipe_loop);
+  		
 	/* Check for pipe exhaustion */
 	if (grinder->pindex == subport->pipe_loop) {
 		subport->pipe_exhaustion = 1;
@@ -2794,7 +2796,7 @@ grinder_handle(struct rte_sched_port *port,
 
 	switch (grinder->state) {
 	case e_GRINDER_PREFETCH_PIPE:
-	{
+	{     RTE_LOG(ERR, SCHED, "%s: ""grinder_prefetch_pipe=\n", __func__);
 		if (grinder_next_pipe(port, subport, pos)) {
 			grinder_prefetch_pipe(subport, pos);
 			subport->busy_grinders++;
@@ -2809,7 +2811,8 @@ grinder_handle(struct rte_sched_port *port,
 	case e_GRINDER_PREFETCH_TC_QUEUE_ARRAYS:
 	{
 		struct rte_sched_pipe *pipe = grinder->pipe;
-
+  RTE_LOG(ERR, SCHED, "%s: ""e_GRINDER_PREFETCH_TC_QUEUE_ARRAYS=\n", __func__);
+  
 		grinder->pipe_params = subport->pipe_profiles + pipe->profile;
 		grinder->subport_params = port->subport_profiles +
 						subport->profile;
@@ -2824,26 +2827,35 @@ grinder_handle(struct rte_sched_port *port,
 	case e_GRINDER_PREFETCH_MBUF:
 	{
 		grinder_prefetch_mbuf(subport, pos);
-
+  RTE_LOG(ERR, SCHED, "%s: ""e_GRINDER_PREFETCH_MBUF=\n", __func__);
 		grinder->state = e_GRINDER_READ_MBUF;
 		return 0;
 	}
 
 	case e_GRINDER_READ_MBUF:
-	{
+	{ //grinder->productive
 		uint32_t wrr_active, result = 0;
-
+  RTE_LOG(ERR, SCHED, "%s: ""e_GRINDER_READ_MBUF=\n", __func__);
+        
 		result = grinder_schedule(port, subport, pos);
-
+        RTE_LOG(ERR, SCHED, "%s: ""prod= %u result = %u=\n", __func__,grinder->productive,result);
+  		   
+         if(subport->pipe_exhaustion == 1)
+			RTE_LOG(ERR, SCHED, "%s: ""e_exhausted =1 =\n", __func__);
+  		   
 		wrr_active = (grinder->tc_index == RTE_SCHED_TRAFFIC_CLASS_BE);
 
 		/* Look for next packet within the same TC */
 		if (result && grinder->qmask) {
 			if (wrr_active)
 				grinder_wrr(subport, pos);
-
+            if(subport->pipe_exhaustion == 1)
+			RTE_LOG(ERR, SCHED, "%s: ""e_exhausted =11 =\n", __func__);
+  		 
 			grinder_prefetch_mbuf(subport, pos);
-
+if(subport->pipe_exhaustion == 1)
+			RTE_LOG(ERR, SCHED, "%s: ""e_exhausted =12 =\n", __func__);
+  		 
 			return 1;
 		}
 
@@ -2852,22 +2864,41 @@ grinder_handle(struct rte_sched_port *port,
 
 		/* Look for another active TC within same pipe */
 		if (grinder_next_tc(port, subport, pos)) {
+
+			if(subport->pipe_exhaustion == 1)
+			RTE_LOG(ERR, SCHED, "%s: ""e_exhausted =13 =\n", __func__);
+  		 
 			grinder_prefetch_tc_queue_arrays(subport, pos);
 
+		if(subport->pipe_exhaustion == 1)
+			RTE_LOG(ERR, SCHED, "%s: ""e_exhausted =14 =\n", __func__);
+  		 
 			grinder->state = e_GRINDER_PREFETCH_MBUF;
 			return result;
 		}
+        RTE_LOG(ERR, SCHED, "%s: ""prod1= %u result = %u=\n", __func__,grinder->productive,result);
 
 		if (grinder->productive == 0 &&
 		    subport->pipe_loop == RTE_SCHED_PIPE_INVALID)
-			subport->pipe_loop = grinder->pindex;
+		
+		{	subport->pipe_loop = grinder->pindex;
 
+		RTE_LOG(ERR, SCHED, "%s: ""subport->pipe_loop =%u =\n", __func__,subport->pipe_loop);
+		}
+if(subport->pipe_exhaustion == 1)
+			RTE_LOG(ERR, SCHED, "%s: ""e_exhausted =16 =\n", __func__);
+  		 
 		grinder_evict(subport, pos);
-
+       if(subport->pipe_exhaustion == 1)
+			RTE_LOG(ERR, SCHED, "%s: ""e_exhausted =15 =\n", __func__);
+        RTE_LOG(ERR, SCHED, "%s: ""prod2= %u result = %u=\n", __func__,grinder->productive,result);
+  		 
 		/* Look for another active pipe */
 		if (grinder_next_pipe(port, subport, pos)) {
 			grinder_prefetch_pipe(subport, pos);
-
+           if(subport->pipe_exhaustion == 1)
+			RTE_LOG(ERR, SCHED, "%s: ""e_exhausted =19 =\n", __func__);
+  		 
 			grinder->state = e_GRINDER_PREFETCH_TC_QUEUE_ARRAYS;
 			return result;
 		}
@@ -2939,6 +2970,7 @@ rte_sched_port_dequeue(struct rte_sched_port *port, struct rte_mbuf **pkts, uint
 	port->n_pkts_out = 0;
 
 	rte_sched_port_time_resync(port);
+	 RTE_LOG(ERR, SCHED, "%s%d: ""subport_id=\n", __func__,subport_id);
 
 	/* Take each queue in the grinder one step further */
 	for (i = 0, count = 0; ; i++)  {
@@ -2954,10 +2986,12 @@ rte_sched_port_dequeue(struct rte_sched_port *port, struct rte_mbuf **pkts, uint
 				subport_id = 0;
 
 			port->subport_id = subport_id;
+			 RTE_LOG(ERR, SCHED, "%s: ""break=\n", __func__);
 			break;
 		}
 
 		if (rte_sched_port_exceptions(subport, i >= RTE_SCHED_PORT_N_GRINDERS)) {
+			RTE_LOG(ERR, SCHED, "%s: ""exception=\n", __func__);
 			i = 0;
 			subport_id++;
 			n_subports++;
@@ -2968,9 +3002,10 @@ rte_sched_port_dequeue(struct rte_sched_port *port, struct rte_mbuf **pkts, uint
 
 		if (n_subports == port->n_subports_per_port) {
 			port->subport_id = subport_id;
+			RTE_LOG(ERR, SCHED, "%s: ""break1=\n", __func__);
 			break;
 		}
 	}
-
+    RTE_LOG(ERR, SCHED, "%s%d: ""count=\n", __func__,count); 
 	return count;
 }
-- 
2.17.1

