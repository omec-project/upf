// Copyright (c) 2016-2017, Nefeli Networks, Inc.
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//
// * Redistributions of source code must retain the above copyright notice, this
// list of conditions and the following disclaimer.
//
// * Redistributions in binary form must reproduce the above copyright notice,
// this list of conditions and the following disclaimer in the documentation
// and/or other materials provided with the distribution.
//
// * Neither the names of the copyright holders nor the names of their
// contributors may be used to endorse or promote products derived from this
// software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGE.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.6.1
// source: service.proto

package bess_pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

var File_service_proto protoreflect.FileDescriptor

var file_service_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x62, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x62, 0x1a, 0x0e, 0x62, 0x65, 0x73, 0x73, 0x5f, 0x6d,
	0x73, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x32, 0xd4, 0x1b, 0x0a, 0x0b, 0x42, 0x45, 0x53,
	0x53, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x3f, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x15, 0x2e, 0x62, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x62,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e,
	0x62, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x08, 0x52, 0x65, 0x73,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x12, 0x15, 0x2e, 0x62, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x62, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x62,
	0x65, 0x73, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x08, 0x4b, 0x69, 0x6c, 0x6c, 0x42, 0x65,
	0x73, 0x73, 0x12, 0x15, 0x2e, 0x62, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x62, 0x65, 0x73, 0x73,
	0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0c, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x12, 0x1c, 0x2e, 0x62, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x6d,
	0x70, 0x6f, 0x72, 0x74, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x62, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0c, 0x55,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x12, 0x1c, 0x2e, 0x62, 0x65,
	0x73, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x62, 0x65, 0x73, 0x73,
	0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x73, 0x12, 0x15, 0x2e, 0x62, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x62, 0x65, 0x73, 0x73,
	0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x08, 0x50, 0x61, 0x75,
	0x73, 0x65, 0x41, 0x6c, 0x6c, 0x12, 0x15, 0x2e, 0x62, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x62, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x62,
	0x65, 0x73, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0b, 0x50, 0x61, 0x75, 0x73, 0x65, 0x57,
	0x6f, 0x72, 0x6b, 0x65, 0x72, 0x12, 0x1b, 0x2e, 0x62, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x62, 0x2e,
	0x50, 0x61, 0x75, 0x73, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x62, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0c,
	0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x12, 0x1c, 0x2e, 0x62,
	0x65, 0x73, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x57, 0x6f, 0x72,
	0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x62, 0x65, 0x73,
	0x73, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x09, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x41, 0x6c,
	0x6c, 0x12, 0x15, 0x2e, 0x62, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x62, 0x65, 0x73, 0x73, 0x2e,
	0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x3f, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x65,
	0x72, 0x73, 0x12, 0x15, 0x2e, 0x62, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x62, 0x65, 0x73, 0x73,
	0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x65,
	0x72, 0x73, 0x12, 0x15, 0x2e, 0x62, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x62, 0x65, 0x73, 0x73,
	0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x09, 0x41, 0x64, 0x64,
	0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x62, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x62,
	0x2e, 0x41, 0x64, 0x64, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x62, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0d, 0x44,
	0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x12, 0x1d, 0x2e, 0x62,
	0x65, 0x73, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x57, 0x6f,
	0x72, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x62, 0x65,
	0x73, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x65, 0x74, 0x54, 0x63,
	0x73, 0x12, 0x15, 0x2e, 0x62, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x62, 0x65, 0x73, 0x73, 0x2e,
	0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x3e, 0x0a, 0x07, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x63, 0x73, 0x12, 0x17, 0x2e,
	0x62, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x63, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x62, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x62,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x62, 0x0a, 0x1a, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x73,
	0x12, 0x15, 0x2e, 0x62, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x62, 0x65, 0x73, 0x73, 0x2e, 0x70,
	0x62, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e,
	0x67, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x05, 0x41, 0x64, 0x64, 0x54, 0x63, 0x12,
	0x15, 0x2e, 0x62, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x54, 0x63, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x62, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x62,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x4a, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x63, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x12, 0x1e, 0x2e, 0x62, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x63, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x62, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x63, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1e,
	0x2e, 0x62, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x63, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x62, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x54,
	0x63, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x1a, 0x2e, 0x62, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x62,
	0x2e, 0x47, 0x65, 0x74, 0x54, 0x63, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x62, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74,
	0x54, 0x63, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x44, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x73,
	0x12, 0x15, 0x2e, 0x62, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x62, 0x65, 0x73, 0x73, 0x2e, 0x70,
	0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x44, 0x72,
	0x69, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x2e, 0x62, 0x65, 0x73, 0x73, 0x2e,
	0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x62, 0x65, 0x73, 0x73, 0x2e, 0x70,
	0x62, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0a, 0x52, 0x65, 0x73,
	0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x15, 0x2e, 0x62, 0x65, 0x73, 0x73, 0x2e, 0x70,
	0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x62, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x15, 0x2e, 0x62, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x62, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x62,
	0x65, 0x73, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0a, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1a, 0x2e, 0x62, 0x65, 0x73, 0x73, 0x2e,
	0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x62, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x50, 0x6f,
	0x72, 0x74, 0x12, 0x1b, 0x2e, 0x62, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x73,
	0x74, 0x72, 0x6f, 0x79, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x62, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0b, 0x53, 0x65, 0x74,
	0x50, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x12, 0x1b, 0x2e, 0x62, 0x65, 0x73, 0x73, 0x2e,
	0x70, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x62, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x62, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x4a, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x12, 0x1b, 0x2e, 0x62, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f,
	0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e,
	0x62, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x43,
	0x6f, 0x6e, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a,
	0x0c, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x1c, 0x2e,
	0x62, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x62, 0x65,
	0x73, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x0d,
	0x47, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x2e,
	0x62, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x62,
	0x65, 0x73, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x42,
	0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x15, 0x2e, 0x62,
	0x65, 0x73, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x62, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x4d, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x50, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4d, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x2e, 0x62, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65,
	0x74, 0x4d, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x62, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74,
	0x4d, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x65, 0x74, 0x4d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x73, 0x12, 0x15, 0x2e, 0x62, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x62, 0x65,
	0x73, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x73, 0x12, 0x15, 0x2e, 0x62, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x62, 0x65,
	0x73, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0c, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x1c, 0x2e, 0x62, 0x65,
	0x73, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x62, 0x65, 0x73, 0x73,
	0x2e, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0d, 0x44, 0x65,
	0x73, 0x74, 0x72, 0x6f, 0x79, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x1d, 0x2e, 0x62, 0x65,
	0x73, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x4d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x62, 0x65, 0x73,
	0x73, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x2e, 0x62, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x62, 0x2e,
	0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x62, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x47,
	0x65, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x1e, 0x2e, 0x62, 0x65, 0x73, 0x73, 0x2e,
	0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x62, 0x65, 0x73, 0x73, 0x2e,
	0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x50, 0x0a, 0x11, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x21, 0x2e, 0x62, 0x65, 0x73, 0x73, 0x2e, 0x70,
	0x62, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x4d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x62, 0x65, 0x73,
	0x73, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0b, 0x44, 0x75, 0x6d, 0x70, 0x4d, 0x65, 0x6d, 0x70,
	0x6f, 0x6f, 0x6c, 0x12, 0x1b, 0x2e, 0x62, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x75,
	0x6d, 0x70, 0x4d, 0x65, 0x6d, 0x70, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1c, 0x2e, 0x62, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x75, 0x6d, 0x70, 0x4d,
	0x65, 0x6d, 0x70, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x44, 0x0a, 0x0d, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x12, 0x17, 0x2e, 0x62, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x62, 0x65, 0x73,
	0x73, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x61,
	0x74, 0x65, 0x48, 0x6f, 0x6f, 0x6b, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x15, 0x2e, 0x62, 0x65,
	0x73, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x22, 0x2e, 0x62, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x47, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6f, 0x6b, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x47,
	0x61, 0x74, 0x65, 0x48, 0x6f, 0x6f, 0x6b, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x24, 0x2e, 0x62, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x61,
	0x74, 0x65, 0x48, 0x6f, 0x6f, 0x6b, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x62, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x62,
	0x2e, 0x47, 0x65, 0x74, 0x47, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6f, 0x6b, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x5c, 0x0a, 0x11, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x47, 0x61, 0x74, 0x65,
	0x48, 0x6f, 0x6f, 0x6b, 0x12, 0x21, 0x2e, 0x62, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x47, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6f, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x62, 0x65, 0x73, 0x73, 0x2e, 0x70,
	0x62, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x47, 0x61, 0x74, 0x65, 0x48,
	0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48, 0x0a,
	0x0d, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6f, 0x6b, 0x73, 0x12, 0x15,
	0x2e, 0x62, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x62, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x62, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x47, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6f, 0x6b, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x0f, 0x47, 0x61, 0x74, 0x65, 0x48,
	0x6f, 0x6f, 0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x1f, 0x2e, 0x62, 0x65, 0x73,
	0x73, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6f, 0x6b, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x62, 0x65,
	0x73, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x13, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x48, 0x6f, 0x6f, 0x6b, 0x12, 0x23,
	0x2e, 0x62, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x48, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x62, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42,
	0x33, 0x5a, 0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x6d,
	0x65, 0x63, 0x2d, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x75, 0x70, 0x66, 0x2d, 0x65,
	0x70, 0x63, 0x2f, 0x70, 0x66, 0x63, 0x70, 0x69, 0x66, 0x61, 0x63, 0x65, 0x2f, 0x62, 0x65, 0x73,
	0x73, 0x5f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var file_service_proto_goTypes = []interface{}{
	(*EmptyRequest)(nil),                       // 0: bess.pb.EmptyRequest
	(*ImportPluginRequest)(nil),                // 1: bess.pb.ImportPluginRequest
	(*UnloadPluginRequest)(nil),                // 2: bess.pb.UnloadPluginRequest
	(*PauseWorkerRequest)(nil),                 // 3: bess.pb.PauseWorkerRequest
	(*ResumeWorkerRequest)(nil),                // 4: bess.pb.ResumeWorkerRequest
	(*AddWorkerRequest)(nil),                   // 5: bess.pb.AddWorkerRequest
	(*DestroyWorkerRequest)(nil),               // 6: bess.pb.DestroyWorkerRequest
	(*ListTcsRequest)(nil),                     // 7: bess.pb.ListTcsRequest
	(*AddTcRequest)(nil),                       // 8: bess.pb.AddTcRequest
	(*UpdateTcParamsRequest)(nil),              // 9: bess.pb.UpdateTcParamsRequest
	(*UpdateTcParentRequest)(nil),              // 10: bess.pb.UpdateTcParentRequest
	(*GetTcStatsRequest)(nil),                  // 11: bess.pb.GetTcStatsRequest
	(*GetDriverInfoRequest)(nil),               // 12: bess.pb.GetDriverInfoRequest
	(*CreatePortRequest)(nil),                  // 13: bess.pb.CreatePortRequest
	(*DestroyPortRequest)(nil),                 // 14: bess.pb.DestroyPortRequest
	(*SetPortConfRequest)(nil),                 // 15: bess.pb.SetPortConfRequest
	(*GetPortConfRequest)(nil),                 // 16: bess.pb.GetPortConfRequest
	(*GetPortStatsRequest)(nil),                // 17: bess.pb.GetPortStatsRequest
	(*GetLinkStatusRequest)(nil),               // 18: bess.pb.GetLinkStatusRequest
	(*GetMclassInfoRequest)(nil),               // 19: bess.pb.GetMclassInfoRequest
	(*CreateModuleRequest)(nil),                // 20: bess.pb.CreateModuleRequest
	(*DestroyModuleRequest)(nil),               // 21: bess.pb.DestroyModuleRequest
	(*GetModuleInfoRequest)(nil),               // 22: bess.pb.GetModuleInfoRequest
	(*ConnectModulesRequest)(nil),              // 23: bess.pb.ConnectModulesRequest
	(*DisconnectModulesRequest)(nil),           // 24: bess.pb.DisconnectModulesRequest
	(*DumpMempoolRequest)(nil),                 // 25: bess.pb.DumpMempoolRequest
	(*CommandRequest)(nil),                     // 26: bess.pb.CommandRequest
	(*GetGateHookClassInfoRequest)(nil),        // 27: bess.pb.GetGateHookClassInfoRequest
	(*ConfigureGateHookRequest)(nil),           // 28: bess.pb.ConfigureGateHookRequest
	(*GateHookCommandRequest)(nil),             // 29: bess.pb.GateHookCommandRequest
	(*ConfigureResumeHookRequest)(nil),         // 30: bess.pb.ConfigureResumeHookRequest
	(*VersionResponse)(nil),                    // 31: bess.pb.VersionResponse
	(*EmptyResponse)(nil),                      // 32: bess.pb.EmptyResponse
	(*ListPluginsResponse)(nil),                // 33: bess.pb.ListPluginsResponse
	(*ListWorkersResponse)(nil),                // 34: bess.pb.ListWorkersResponse
	(*ListTcsResponse)(nil),                    // 35: bess.pb.ListTcsResponse
	(*CheckSchedulingConstraintsResponse)(nil), // 36: bess.pb.CheckSchedulingConstraintsResponse
	(*GetTcStatsResponse)(nil),                 // 37: bess.pb.GetTcStatsResponse
	(*ListDriversResponse)(nil),                // 38: bess.pb.ListDriversResponse
	(*GetDriverInfoResponse)(nil),              // 39: bess.pb.GetDriverInfoResponse
	(*ListPortsResponse)(nil),                  // 40: bess.pb.ListPortsResponse
	(*CreatePortResponse)(nil),                 // 41: bess.pb.CreatePortResponse
	(*CommandResponse)(nil),                    // 42: bess.pb.CommandResponse
	(*GetPortConfResponse)(nil),                // 43: bess.pb.GetPortConfResponse
	(*GetPortStatsResponse)(nil),               // 44: bess.pb.GetPortStatsResponse
	(*GetLinkStatusResponse)(nil),              // 45: bess.pb.GetLinkStatusResponse
	(*ListMclassResponse)(nil),                 // 46: bess.pb.ListMclassResponse
	(*GetMclassInfoResponse)(nil),              // 47: bess.pb.GetMclassInfoResponse
	(*ListModulesResponse)(nil),                // 48: bess.pb.ListModulesResponse
	(*CreateModuleResponse)(nil),               // 49: bess.pb.CreateModuleResponse
	(*GetModuleInfoResponse)(nil),              // 50: bess.pb.GetModuleInfoResponse
	(*DumpMempoolResponse)(nil),                // 51: bess.pb.DumpMempoolResponse
	(*ListGateHookClassResponse)(nil),          // 52: bess.pb.ListGateHookClassResponse
	(*GetGateHookClassInfoResponse)(nil),       // 53: bess.pb.GetGateHookClassInfoResponse
	(*ConfigureGateHookResponse)(nil),          // 54: bess.pb.ConfigureGateHookResponse
	(*ListGateHooksResponse)(nil),              // 55: bess.pb.ListGateHooksResponse
}
var file_service_proto_depIdxs = []int32{
	0,  // 0: bess.pb.BESSControl.GetVersion:input_type -> bess.pb.EmptyRequest
	0,  // 1: bess.pb.BESSControl.ResetAll:input_type -> bess.pb.EmptyRequest
	0,  // 2: bess.pb.BESSControl.KillBess:input_type -> bess.pb.EmptyRequest
	1,  // 3: bess.pb.BESSControl.ImportPlugin:input_type -> bess.pb.ImportPluginRequest
	2,  // 4: bess.pb.BESSControl.UnloadPlugin:input_type -> bess.pb.UnloadPluginRequest
	0,  // 5: bess.pb.BESSControl.ListPlugins:input_type -> bess.pb.EmptyRequest
	0,  // 6: bess.pb.BESSControl.PauseAll:input_type -> bess.pb.EmptyRequest
	3,  // 7: bess.pb.BESSControl.PauseWorker:input_type -> bess.pb.PauseWorkerRequest
	4,  // 8: bess.pb.BESSControl.ResumeWorker:input_type -> bess.pb.ResumeWorkerRequest
	0,  // 9: bess.pb.BESSControl.ResumeAll:input_type -> bess.pb.EmptyRequest
	0,  // 10: bess.pb.BESSControl.ResetWorkers:input_type -> bess.pb.EmptyRequest
	0,  // 11: bess.pb.BESSControl.ListWorkers:input_type -> bess.pb.EmptyRequest
	5,  // 12: bess.pb.BESSControl.AddWorker:input_type -> bess.pb.AddWorkerRequest
	6,  // 13: bess.pb.BESSControl.DestroyWorker:input_type -> bess.pb.DestroyWorkerRequest
	0,  // 14: bess.pb.BESSControl.ResetTcs:input_type -> bess.pb.EmptyRequest
	7,  // 15: bess.pb.BESSControl.ListTcs:input_type -> bess.pb.ListTcsRequest
	0,  // 16: bess.pb.BESSControl.CheckSchedulingConstraints:input_type -> bess.pb.EmptyRequest
	8,  // 17: bess.pb.BESSControl.AddTc:input_type -> bess.pb.AddTcRequest
	9,  // 18: bess.pb.BESSControl.UpdateTcParams:input_type -> bess.pb.UpdateTcParamsRequest
	10, // 19: bess.pb.BESSControl.UpdateTcParent:input_type -> bess.pb.UpdateTcParentRequest
	11, // 20: bess.pb.BESSControl.GetTcStats:input_type -> bess.pb.GetTcStatsRequest
	0,  // 21: bess.pb.BESSControl.ListDrivers:input_type -> bess.pb.EmptyRequest
	12, // 22: bess.pb.BESSControl.GetDriverInfo:input_type -> bess.pb.GetDriverInfoRequest
	0,  // 23: bess.pb.BESSControl.ResetPorts:input_type -> bess.pb.EmptyRequest
	0,  // 24: bess.pb.BESSControl.ListPorts:input_type -> bess.pb.EmptyRequest
	13, // 25: bess.pb.BESSControl.CreatePort:input_type -> bess.pb.CreatePortRequest
	14, // 26: bess.pb.BESSControl.DestroyPort:input_type -> bess.pb.DestroyPortRequest
	15, // 27: bess.pb.BESSControl.SetPortConf:input_type -> bess.pb.SetPortConfRequest
	16, // 28: bess.pb.BESSControl.GetPortConf:input_type -> bess.pb.GetPortConfRequest
	17, // 29: bess.pb.BESSControl.GetPortStats:input_type -> bess.pb.GetPortStatsRequest
	18, // 30: bess.pb.BESSControl.GetLinkStatus:input_type -> bess.pb.GetLinkStatusRequest
	0,  // 31: bess.pb.BESSControl.ListMclass:input_type -> bess.pb.EmptyRequest
	19, // 32: bess.pb.BESSControl.GetMclassInfo:input_type -> bess.pb.GetMclassInfoRequest
	0,  // 33: bess.pb.BESSControl.ResetModules:input_type -> bess.pb.EmptyRequest
	0,  // 34: bess.pb.BESSControl.ListModules:input_type -> bess.pb.EmptyRequest
	20, // 35: bess.pb.BESSControl.CreateModule:input_type -> bess.pb.CreateModuleRequest
	21, // 36: bess.pb.BESSControl.DestroyModule:input_type -> bess.pb.DestroyModuleRequest
	22, // 37: bess.pb.BESSControl.GetModuleInfo:input_type -> bess.pb.GetModuleInfoRequest
	23, // 38: bess.pb.BESSControl.ConnectModules:input_type -> bess.pb.ConnectModulesRequest
	24, // 39: bess.pb.BESSControl.DisconnectModules:input_type -> bess.pb.DisconnectModulesRequest
	25, // 40: bess.pb.BESSControl.DumpMempool:input_type -> bess.pb.DumpMempoolRequest
	26, // 41: bess.pb.BESSControl.ModuleCommand:input_type -> bess.pb.CommandRequest
	0,  // 42: bess.pb.BESSControl.ListGateHookClass:input_type -> bess.pb.EmptyRequest
	27, // 43: bess.pb.BESSControl.GetGateHookClassInfo:input_type -> bess.pb.GetGateHookClassInfoRequest
	28, // 44: bess.pb.BESSControl.ConfigureGateHook:input_type -> bess.pb.ConfigureGateHookRequest
	0,  // 45: bess.pb.BESSControl.ListGateHooks:input_type -> bess.pb.EmptyRequest
	29, // 46: bess.pb.BESSControl.GateHookCommand:input_type -> bess.pb.GateHookCommandRequest
	30, // 47: bess.pb.BESSControl.ConfigureResumeHook:input_type -> bess.pb.ConfigureResumeHookRequest
	31, // 48: bess.pb.BESSControl.GetVersion:output_type -> bess.pb.VersionResponse
	32, // 49: bess.pb.BESSControl.ResetAll:output_type -> bess.pb.EmptyResponse
	32, // 50: bess.pb.BESSControl.KillBess:output_type -> bess.pb.EmptyResponse
	32, // 51: bess.pb.BESSControl.ImportPlugin:output_type -> bess.pb.EmptyResponse
	32, // 52: bess.pb.BESSControl.UnloadPlugin:output_type -> bess.pb.EmptyResponse
	33, // 53: bess.pb.BESSControl.ListPlugins:output_type -> bess.pb.ListPluginsResponse
	32, // 54: bess.pb.BESSControl.PauseAll:output_type -> bess.pb.EmptyResponse
	32, // 55: bess.pb.BESSControl.PauseWorker:output_type -> bess.pb.EmptyResponse
	32, // 56: bess.pb.BESSControl.ResumeWorker:output_type -> bess.pb.EmptyResponse
	32, // 57: bess.pb.BESSControl.ResumeAll:output_type -> bess.pb.EmptyResponse
	32, // 58: bess.pb.BESSControl.ResetWorkers:output_type -> bess.pb.EmptyResponse
	34, // 59: bess.pb.BESSControl.ListWorkers:output_type -> bess.pb.ListWorkersResponse
	32, // 60: bess.pb.BESSControl.AddWorker:output_type -> bess.pb.EmptyResponse
	32, // 61: bess.pb.BESSControl.DestroyWorker:output_type -> bess.pb.EmptyResponse
	32, // 62: bess.pb.BESSControl.ResetTcs:output_type -> bess.pb.EmptyResponse
	35, // 63: bess.pb.BESSControl.ListTcs:output_type -> bess.pb.ListTcsResponse
	36, // 64: bess.pb.BESSControl.CheckSchedulingConstraints:output_type -> bess.pb.CheckSchedulingConstraintsResponse
	32, // 65: bess.pb.BESSControl.AddTc:output_type -> bess.pb.EmptyResponse
	32, // 66: bess.pb.BESSControl.UpdateTcParams:output_type -> bess.pb.EmptyResponse
	32, // 67: bess.pb.BESSControl.UpdateTcParent:output_type -> bess.pb.EmptyResponse
	37, // 68: bess.pb.BESSControl.GetTcStats:output_type -> bess.pb.GetTcStatsResponse
	38, // 69: bess.pb.BESSControl.ListDrivers:output_type -> bess.pb.ListDriversResponse
	39, // 70: bess.pb.BESSControl.GetDriverInfo:output_type -> bess.pb.GetDriverInfoResponse
	32, // 71: bess.pb.BESSControl.ResetPorts:output_type -> bess.pb.EmptyResponse
	40, // 72: bess.pb.BESSControl.ListPorts:output_type -> bess.pb.ListPortsResponse
	41, // 73: bess.pb.BESSControl.CreatePort:output_type -> bess.pb.CreatePortResponse
	32, // 74: bess.pb.BESSControl.DestroyPort:output_type -> bess.pb.EmptyResponse
	42, // 75: bess.pb.BESSControl.SetPortConf:output_type -> bess.pb.CommandResponse
	43, // 76: bess.pb.BESSControl.GetPortConf:output_type -> bess.pb.GetPortConfResponse
	44, // 77: bess.pb.BESSControl.GetPortStats:output_type -> bess.pb.GetPortStatsResponse
	45, // 78: bess.pb.BESSControl.GetLinkStatus:output_type -> bess.pb.GetLinkStatusResponse
	46, // 79: bess.pb.BESSControl.ListMclass:output_type -> bess.pb.ListMclassResponse
	47, // 80: bess.pb.BESSControl.GetMclassInfo:output_type -> bess.pb.GetMclassInfoResponse
	32, // 81: bess.pb.BESSControl.ResetModules:output_type -> bess.pb.EmptyResponse
	48, // 82: bess.pb.BESSControl.ListModules:output_type -> bess.pb.ListModulesResponse
	49, // 83: bess.pb.BESSControl.CreateModule:output_type -> bess.pb.CreateModuleResponse
	32, // 84: bess.pb.BESSControl.DestroyModule:output_type -> bess.pb.EmptyResponse
	50, // 85: bess.pb.BESSControl.GetModuleInfo:output_type -> bess.pb.GetModuleInfoResponse
	32, // 86: bess.pb.BESSControl.ConnectModules:output_type -> bess.pb.EmptyResponse
	32, // 87: bess.pb.BESSControl.DisconnectModules:output_type -> bess.pb.EmptyResponse
	51, // 88: bess.pb.BESSControl.DumpMempool:output_type -> bess.pb.DumpMempoolResponse
	42, // 89: bess.pb.BESSControl.ModuleCommand:output_type -> bess.pb.CommandResponse
	52, // 90: bess.pb.BESSControl.ListGateHookClass:output_type -> bess.pb.ListGateHookClassResponse
	53, // 91: bess.pb.BESSControl.GetGateHookClassInfo:output_type -> bess.pb.GetGateHookClassInfoResponse
	54, // 92: bess.pb.BESSControl.ConfigureGateHook:output_type -> bess.pb.ConfigureGateHookResponse
	55, // 93: bess.pb.BESSControl.ListGateHooks:output_type -> bess.pb.ListGateHooksResponse
	42, // 94: bess.pb.BESSControl.GateHookCommand:output_type -> bess.pb.CommandResponse
	42, // 95: bess.pb.BESSControl.ConfigureResumeHook:output_type -> bess.pb.CommandResponse
	48, // [48:96] is the sub-list for method output_type
	0,  // [0:48] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_service_proto_init() }
func file_service_proto_init() {
	if File_service_proto != nil {
		return
	}
	file_bess_msg_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_proto_goTypes,
		DependencyIndexes: file_service_proto_depIdxs,
	}.Build()
	File_service_proto = out.File
	file_service_proto_rawDesc = nil
	file_service_proto_goTypes = nil
	file_service_proto_depIdxs = nil
}
