// Code generated by protoc-gen-go. DO NOT EDIT.
// source: p4/v1/p4data.proto

package v1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type P4Data struct {
	// Types that are valid to be assigned to Data:
	//	*P4Data_Bitstring
	//	*P4Data_Varbit
	//	*P4Data_Bool
	//	*P4Data_Tuple
	//	*P4Data_Struct
	//	*P4Data_Header
	//	*P4Data_HeaderUnion
	//	*P4Data_HeaderStack
	//	*P4Data_HeaderUnionStack
	//	*P4Data_Enum
	//	*P4Data_Error
	//	*P4Data_EnumValue
	Data                 isP4Data_Data `protobuf_oneof:"data"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *P4Data) Reset()         { *m = P4Data{} }
func (m *P4Data) String() string { return proto.CompactTextString(m) }
func (*P4Data) ProtoMessage()    {}
func (*P4Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_9616c22152bdcef4, []int{0}
}

func (m *P4Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_P4Data.Unmarshal(m, b)
}
func (m *P4Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_P4Data.Marshal(b, m, deterministic)
}
func (m *P4Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_P4Data.Merge(m, src)
}
func (m *P4Data) XXX_Size() int {
	return xxx_messageInfo_P4Data.Size(m)
}
func (m *P4Data) XXX_DiscardUnknown() {
	xxx_messageInfo_P4Data.DiscardUnknown(m)
}

var xxx_messageInfo_P4Data proto.InternalMessageInfo

type isP4Data_Data interface {
	isP4Data_Data()
}

type P4Data_Bitstring struct {
	Bitstring []byte `protobuf:"bytes,1,opt,name=bitstring,proto3,oneof"`
}

type P4Data_Varbit struct {
	Varbit *P4Varbit `protobuf:"bytes,2,opt,name=varbit,proto3,oneof"`
}

type P4Data_Bool struct {
	Bool bool `protobuf:"varint,3,opt,name=bool,proto3,oneof"`
}

type P4Data_Tuple struct {
	Tuple *P4StructLike `protobuf:"bytes,4,opt,name=tuple,proto3,oneof"`
}

type P4Data_Struct struct {
	Struct *P4StructLike `protobuf:"bytes,5,opt,name=struct,proto3,oneof"`
}

type P4Data_Header struct {
	Header *P4Header `protobuf:"bytes,6,opt,name=header,proto3,oneof"`
}

type P4Data_HeaderUnion struct {
	HeaderUnion *P4HeaderUnion `protobuf:"bytes,7,opt,name=header_union,json=headerUnion,proto3,oneof"`
}

type P4Data_HeaderStack struct {
	HeaderStack *P4HeaderStack `protobuf:"bytes,8,opt,name=header_stack,json=headerStack,proto3,oneof"`
}

type P4Data_HeaderUnionStack struct {
	HeaderUnionStack *P4HeaderUnionStack `protobuf:"bytes,9,opt,name=header_union_stack,json=headerUnionStack,proto3,oneof"`
}

type P4Data_Enum struct {
	Enum string `protobuf:"bytes,10,opt,name=enum,proto3,oneof"`
}

type P4Data_Error struct {
	Error string `protobuf:"bytes,11,opt,name=error,proto3,oneof"`
}

type P4Data_EnumValue struct {
	EnumValue []byte `protobuf:"bytes,12,opt,name=enum_value,json=enumValue,proto3,oneof"`
}

func (*P4Data_Bitstring) isP4Data_Data() {}

func (*P4Data_Varbit) isP4Data_Data() {}

func (*P4Data_Bool) isP4Data_Data() {}

func (*P4Data_Tuple) isP4Data_Data() {}

func (*P4Data_Struct) isP4Data_Data() {}

func (*P4Data_Header) isP4Data_Data() {}

func (*P4Data_HeaderUnion) isP4Data_Data() {}

func (*P4Data_HeaderStack) isP4Data_Data() {}

func (*P4Data_HeaderUnionStack) isP4Data_Data() {}

func (*P4Data_Enum) isP4Data_Data() {}

func (*P4Data_Error) isP4Data_Data() {}

func (*P4Data_EnumValue) isP4Data_Data() {}

func (m *P4Data) GetData() isP4Data_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *P4Data) GetBitstring() []byte {
	if x, ok := m.GetData().(*P4Data_Bitstring); ok {
		return x.Bitstring
	}
	return nil
}

func (m *P4Data) GetVarbit() *P4Varbit {
	if x, ok := m.GetData().(*P4Data_Varbit); ok {
		return x.Varbit
	}
	return nil
}

func (m *P4Data) GetBool() bool {
	if x, ok := m.GetData().(*P4Data_Bool); ok {
		return x.Bool
	}
	return false
}

func (m *P4Data) GetTuple() *P4StructLike {
	if x, ok := m.GetData().(*P4Data_Tuple); ok {
		return x.Tuple
	}
	return nil
}

func (m *P4Data) GetStruct() *P4StructLike {
	if x, ok := m.GetData().(*P4Data_Struct); ok {
		return x.Struct
	}
	return nil
}

func (m *P4Data) GetHeader() *P4Header {
	if x, ok := m.GetData().(*P4Data_Header); ok {
		return x.Header
	}
	return nil
}

func (m *P4Data) GetHeaderUnion() *P4HeaderUnion {
	if x, ok := m.GetData().(*P4Data_HeaderUnion); ok {
		return x.HeaderUnion
	}
	return nil
}

func (m *P4Data) GetHeaderStack() *P4HeaderStack {
	if x, ok := m.GetData().(*P4Data_HeaderStack); ok {
		return x.HeaderStack
	}
	return nil
}

func (m *P4Data) GetHeaderUnionStack() *P4HeaderUnionStack {
	if x, ok := m.GetData().(*P4Data_HeaderUnionStack); ok {
		return x.HeaderUnionStack
	}
	return nil
}

func (m *P4Data) GetEnum() string {
	if x, ok := m.GetData().(*P4Data_Enum); ok {
		return x.Enum
	}
	return ""
}

func (m *P4Data) GetError() string {
	if x, ok := m.GetData().(*P4Data_Error); ok {
		return x.Error
	}
	return ""
}

func (m *P4Data) GetEnumValue() []byte {
	if x, ok := m.GetData().(*P4Data_EnumValue); ok {
		return x.EnumValue
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*P4Data) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*P4Data_Bitstring)(nil),
		(*P4Data_Varbit)(nil),
		(*P4Data_Bool)(nil),
		(*P4Data_Tuple)(nil),
		(*P4Data_Struct)(nil),
		(*P4Data_Header)(nil),
		(*P4Data_HeaderUnion)(nil),
		(*P4Data_HeaderStack)(nil),
		(*P4Data_HeaderUnionStack)(nil),
		(*P4Data_Enum)(nil),
		(*P4Data_Error)(nil),
		(*P4Data_EnumValue)(nil),
	}
}

type P4Varbit struct {
	Bitstring            []byte   `protobuf:"bytes,1,opt,name=bitstring,proto3" json:"bitstring,omitempty"`
	Bitwidth             int32    `protobuf:"varint,2,opt,name=bitwidth,proto3" json:"bitwidth,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *P4Varbit) Reset()         { *m = P4Varbit{} }
func (m *P4Varbit) String() string { return proto.CompactTextString(m) }
func (*P4Varbit) ProtoMessage()    {}
func (*P4Varbit) Descriptor() ([]byte, []int) {
	return fileDescriptor_9616c22152bdcef4, []int{1}
}

func (m *P4Varbit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_P4Varbit.Unmarshal(m, b)
}
func (m *P4Varbit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_P4Varbit.Marshal(b, m, deterministic)
}
func (m *P4Varbit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_P4Varbit.Merge(m, src)
}
func (m *P4Varbit) XXX_Size() int {
	return xxx_messageInfo_P4Varbit.Size(m)
}
func (m *P4Varbit) XXX_DiscardUnknown() {
	xxx_messageInfo_P4Varbit.DiscardUnknown(m)
}

var xxx_messageInfo_P4Varbit proto.InternalMessageInfo

func (m *P4Varbit) GetBitstring() []byte {
	if m != nil {
		return m.Bitstring
	}
	return nil
}

func (m *P4Varbit) GetBitwidth() int32 {
	if m != nil {
		return m.Bitwidth
	}
	return 0
}

type P4StructLike struct {
	Members              []*P4Data `protobuf:"bytes,1,rep,name=members,proto3" json:"members,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *P4StructLike) Reset()         { *m = P4StructLike{} }
func (m *P4StructLike) String() string { return proto.CompactTextString(m) }
func (*P4StructLike) ProtoMessage()    {}
func (*P4StructLike) Descriptor() ([]byte, []int) {
	return fileDescriptor_9616c22152bdcef4, []int{2}
}

func (m *P4StructLike) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_P4StructLike.Unmarshal(m, b)
}
func (m *P4StructLike) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_P4StructLike.Marshal(b, m, deterministic)
}
func (m *P4StructLike) XXX_Merge(src proto.Message) {
	xxx_messageInfo_P4StructLike.Merge(m, src)
}
func (m *P4StructLike) XXX_Size() int {
	return xxx_messageInfo_P4StructLike.Size(m)
}
func (m *P4StructLike) XXX_DiscardUnknown() {
	xxx_messageInfo_P4StructLike.DiscardUnknown(m)
}

var xxx_messageInfo_P4StructLike proto.InternalMessageInfo

func (m *P4StructLike) GetMembers() []*P4Data {
	if m != nil {
		return m.Members
	}
	return nil
}

type P4Header struct {
	// If the header is invalid (is_valid is "false"), then the bitstrings
	// repeated field must be empty.
	IsValid              bool     `protobuf:"varint,1,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	Bitstrings           [][]byte `protobuf:"bytes,2,rep,name=bitstrings,proto3" json:"bitstrings,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *P4Header) Reset()         { *m = P4Header{} }
func (m *P4Header) String() string { return proto.CompactTextString(m) }
func (*P4Header) ProtoMessage()    {}
func (*P4Header) Descriptor() ([]byte, []int) {
	return fileDescriptor_9616c22152bdcef4, []int{3}
}

func (m *P4Header) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_P4Header.Unmarshal(m, b)
}
func (m *P4Header) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_P4Header.Marshal(b, m, deterministic)
}
func (m *P4Header) XXX_Merge(src proto.Message) {
	xxx_messageInfo_P4Header.Merge(m, src)
}
func (m *P4Header) XXX_Size() int {
	return xxx_messageInfo_P4Header.Size(m)
}
func (m *P4Header) XXX_DiscardUnknown() {
	xxx_messageInfo_P4Header.DiscardUnknown(m)
}

var xxx_messageInfo_P4Header proto.InternalMessageInfo

func (m *P4Header) GetIsValid() bool {
	if m != nil {
		return m.IsValid
	}
	return false
}

func (m *P4Header) GetBitstrings() [][]byte {
	if m != nil {
		return m.Bitstrings
	}
	return nil
}

type P4HeaderUnion struct {
	// An empty string indicates that none of the union members are valid and
	// valid_header must therefore be unset.
	ValidHeaderName      string    `protobuf:"bytes,1,opt,name=valid_header_name,json=validHeaderName,proto3" json:"valid_header_name,omitempty"`
	ValidHeader          *P4Header `protobuf:"bytes,2,opt,name=valid_header,json=validHeader,proto3" json:"valid_header,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *P4HeaderUnion) Reset()         { *m = P4HeaderUnion{} }
func (m *P4HeaderUnion) String() string { return proto.CompactTextString(m) }
func (*P4HeaderUnion) ProtoMessage()    {}
func (*P4HeaderUnion) Descriptor() ([]byte, []int) {
	return fileDescriptor_9616c22152bdcef4, []int{4}
}

func (m *P4HeaderUnion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_P4HeaderUnion.Unmarshal(m, b)
}
func (m *P4HeaderUnion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_P4HeaderUnion.Marshal(b, m, deterministic)
}
func (m *P4HeaderUnion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_P4HeaderUnion.Merge(m, src)
}
func (m *P4HeaderUnion) XXX_Size() int {
	return xxx_messageInfo_P4HeaderUnion.Size(m)
}
func (m *P4HeaderUnion) XXX_DiscardUnknown() {
	xxx_messageInfo_P4HeaderUnion.DiscardUnknown(m)
}

var xxx_messageInfo_P4HeaderUnion proto.InternalMessageInfo

func (m *P4HeaderUnion) GetValidHeaderName() string {
	if m != nil {
		return m.ValidHeaderName
	}
	return ""
}

func (m *P4HeaderUnion) GetValidHeader() *P4Header {
	if m != nil {
		return m.ValidHeader
	}
	return nil
}

type P4HeaderStack struct {
	// The length of this repeated field must always be equal to the compile-time
	// size of the header stack, which is specified in P4Info.
	Entries              []*P4Header `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *P4HeaderStack) Reset()         { *m = P4HeaderStack{} }
func (m *P4HeaderStack) String() string { return proto.CompactTextString(m) }
func (*P4HeaderStack) ProtoMessage()    {}
func (*P4HeaderStack) Descriptor() ([]byte, []int) {
	return fileDescriptor_9616c22152bdcef4, []int{5}
}

func (m *P4HeaderStack) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_P4HeaderStack.Unmarshal(m, b)
}
func (m *P4HeaderStack) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_P4HeaderStack.Marshal(b, m, deterministic)
}
func (m *P4HeaderStack) XXX_Merge(src proto.Message) {
	xxx_messageInfo_P4HeaderStack.Merge(m, src)
}
func (m *P4HeaderStack) XXX_Size() int {
	return xxx_messageInfo_P4HeaderStack.Size(m)
}
func (m *P4HeaderStack) XXX_DiscardUnknown() {
	xxx_messageInfo_P4HeaderStack.DiscardUnknown(m)
}

var xxx_messageInfo_P4HeaderStack proto.InternalMessageInfo

func (m *P4HeaderStack) GetEntries() []*P4Header {
	if m != nil {
		return m.Entries
	}
	return nil
}

type P4HeaderUnionStack struct {
	// The length of this repeated field must always be equal to the compile-time
	// size of the header union stack, which is specified in P4Info.
	Entries              []*P4HeaderUnion `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *P4HeaderUnionStack) Reset()         { *m = P4HeaderUnionStack{} }
func (m *P4HeaderUnionStack) String() string { return proto.CompactTextString(m) }
func (*P4HeaderUnionStack) ProtoMessage()    {}
func (*P4HeaderUnionStack) Descriptor() ([]byte, []int) {
	return fileDescriptor_9616c22152bdcef4, []int{6}
}

func (m *P4HeaderUnionStack) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_P4HeaderUnionStack.Unmarshal(m, b)
}
func (m *P4HeaderUnionStack) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_P4HeaderUnionStack.Marshal(b, m, deterministic)
}
func (m *P4HeaderUnionStack) XXX_Merge(src proto.Message) {
	xxx_messageInfo_P4HeaderUnionStack.Merge(m, src)
}
func (m *P4HeaderUnionStack) XXX_Size() int {
	return xxx_messageInfo_P4HeaderUnionStack.Size(m)
}
func (m *P4HeaderUnionStack) XXX_DiscardUnknown() {
	xxx_messageInfo_P4HeaderUnionStack.DiscardUnknown(m)
}

var xxx_messageInfo_P4HeaderUnionStack proto.InternalMessageInfo

func (m *P4HeaderUnionStack) GetEntries() []*P4HeaderUnion {
	if m != nil {
		return m.Entries
	}
	return nil
}

func init() {
	proto.RegisterType((*P4Data)(nil), "p4.v1.P4Data")
	proto.RegisterType((*P4Varbit)(nil), "p4.v1.P4Varbit")
	proto.RegisterType((*P4StructLike)(nil), "p4.v1.P4StructLike")
	proto.RegisterType((*P4Header)(nil), "p4.v1.P4Header")
	proto.RegisterType((*P4HeaderUnion)(nil), "p4.v1.P4HeaderUnion")
	proto.RegisterType((*P4HeaderStack)(nil), "p4.v1.P4HeaderStack")
	proto.RegisterType((*P4HeaderUnionStack)(nil), "p4.v1.P4HeaderUnionStack")
}

func init() { proto.RegisterFile("p4/v1/p4data.proto", fileDescriptor_9616c22152bdcef4) }

var fileDescriptor_9616c22152bdcef4 = []byte{
	// 513 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x53, 0xdf, 0x8b, 0xd3, 0x40,
	0x10, 0x6e, 0xae, 0x6d, 0x9a, 0x4e, 0x73, 0x9c, 0xae, 0x87, 0xec, 0x89, 0x9c, 0x21, 0x88, 0xe6,
	0x14, 0x13, 0xae, 0x06, 0x44, 0x1f, 0x8f, 0x0a, 0x11, 0x44, 0x8e, 0x3d, 0xec, 0x83, 0x2f, 0x65,
	0xd3, 0x2e, 0xed, 0x72, 0xcd, 0x0f, 0x36, 0x9b, 0xfa, 0x2f, 0xf8, 0x67, 0xcb, 0x6e, 0x7e, 0x34,
	0xb6, 0xc5, 0xb7, 0xcc, 0x37, 0xdf, 0xf7, 0xcd, 0xec, 0xcc, 0x04, 0x50, 0x1e, 0x06, 0xbb, 0xdb,
	0x20, 0x0f, 0x57, 0x54, 0x52, 0x3f, 0x17, 0x99, 0xcc, 0xd0, 0x30, 0x0f, 0xfd, 0xdd, 0xad, 0xfb,
	0x67, 0x00, 0xe6, 0x7d, 0x38, 0xa3, 0x92, 0xa2, 0x6b, 0x18, 0xc7, 0x5c, 0x16, 0x52, 0xf0, 0x74,
	0x8d, 0x0d, 0xc7, 0xf0, 0xec, 0xa8, 0x47, 0xf6, 0x10, 0xba, 0x01, 0x73, 0x47, 0x45, 0xcc, 0x25,
	0x3e, 0x73, 0x0c, 0x6f, 0x32, 0xbd, 0xf0, 0xb5, 0x85, 0x7f, 0x1f, 0xce, 0x35, 0x1c, 0xf5, 0x48,
	0x4d, 0x40, 0x97, 0x30, 0x88, 0xb3, 0x6c, 0x8b, 0xfb, 0x8e, 0xe1, 0x59, 0x51, 0x8f, 0xe8, 0x08,
	0xbd, 0x87, 0xa1, 0x2c, 0xf3, 0x2d, 0xc3, 0x03, 0xad, 0x7f, 0xd6, 0xea, 0x1f, 0xa4, 0x28, 0x97,
	0xf2, 0x3b, 0x7f, 0x64, 0x51, 0x8f, 0x54, 0x1c, 0xf4, 0x01, 0xcc, 0x42, 0xc3, 0x78, 0xf8, 0x3f,
	0x76, 0x4d, 0x52, 0xcd, 0x6d, 0x18, 0x5d, 0x31, 0x81, 0xcd, 0x83, 0xe6, 0x22, 0x0d, 0x2b, 0x6a,
	0x45, 0x40, 0x9f, 0xc1, 0xae, 0xbe, 0x16, 0x65, 0xca, 0xb3, 0x14, 0x8f, 0xb4, 0xe0, 0xf2, 0x40,
	0xf0, 0x53, 0xe5, 0xa2, 0x1e, 0x99, 0x6c, 0xf6, 0x61, 0x47, 0x5a, 0x48, 0xba, 0x7c, 0xc4, 0xd6,
	0x49, 0xe9, 0x83, 0xca, 0xed, 0xa5, 0x3a, 0x44, 0xdf, 0x00, 0x75, 0xab, 0xd6, 0x06, 0x63, 0x6d,
	0x70, 0x75, 0xaa, 0x76, 0xe3, 0xf2, 0x64, 0x73, 0x80, 0xa9, 0xe9, 0xb2, 0xb4, 0x4c, 0x30, 0x38,
	0x86, 0x37, 0x56, 0xd3, 0x55, 0x11, 0x7a, 0x0e, 0x43, 0x26, 0x44, 0x26, 0xf0, 0xa4, 0x86, 0xab,
	0x10, 0xbd, 0x02, 0x50, 0xf9, 0xc5, 0x8e, 0x6e, 0x4b, 0x86, 0xed, 0x66, 0xaf, 0x0a, 0x9b, 0x2b,
	0xe8, 0xce, 0x84, 0x81, 0xba, 0x0b, 0x77, 0x06, 0x56, 0xb3, 0x4a, 0xf4, 0xf2, 0xe8, 0x16, 0xba,
	0x97, 0xf0, 0x02, 0xac, 0x98, 0xcb, 0xdf, 0x7c, 0x25, 0x37, 0xfa, 0x16, 0x86, 0xa4, 0x8d, 0xdd,
	0x4f, 0x60, 0x77, 0x57, 0x84, 0xde, 0xc2, 0x28, 0x61, 0x49, 0xcc, 0x44, 0x81, 0x0d, 0xa7, 0xef,
	0x4d, 0xa6, 0xe7, 0xed, 0x63, 0xd5, 0xd5, 0x91, 0x26, 0xeb, 0x7e, 0x55, 0xe5, 0xab, 0xf7, 0xa3,
	0x2b, 0xb0, 0x78, 0xa1, 0x3a, 0xe6, 0x2b, 0x5d, 0xdd, 0x22, 0x23, 0x5e, 0xcc, 0x55, 0x88, 0xae,
	0x01, 0xda, 0x46, 0x0a, 0x7c, 0xe6, 0xf4, 0x3d, 0x9b, 0x74, 0x10, 0x37, 0x83, 0xf3, 0x7f, 0xc6,
	0x88, 0xde, 0xc1, 0x53, 0x6d, 0xb4, 0xa8, 0xc7, 0x9f, 0xd2, 0x84, 0x69, 0xd3, 0x31, 0xb9, 0xd0,
	0x89, 0x8a, 0xfc, 0x83, 0x26, 0x0c, 0x4d, 0xc1, 0xee, 0x72, 0x8f, 0x0e, 0xbd, 0xa2, 0x92, 0x49,
	0x47, 0xe7, 0x7e, 0xd9, 0x17, 0xac, 0xd6, 0x73, 0x03, 0x23, 0x96, 0x4a, 0xc1, 0x59, 0xf3, 0xe2,
	0x23, 0x7d, 0x93, 0x77, 0x67, 0x80, 0x8e, 0x77, 0x8e, 0xfc, 0x43, 0x83, 0x93, 0xb7, 0xd9, 0xba,
	0xdc, 0xbd, 0xf9, 0xf5, 0x7a, 0xcd, 0xe5, 0xa6, 0x8c, 0xfd, 0x65, 0x96, 0x04, 0x79, 0xb8, 0xa5,
	0xe9, 0x3a, 0xc8, 0x43, 0x51, 0xa6, 0x92, 0x27, 0x2c, 0x58, 0x67, 0x81, 0xfe, 0xff, 0x63, 0x53,
	0xff, 0xf9, 0x1f, 0xff, 0x06, 0x00, 0x00, 0xff, 0xff, 0x67, 0x04, 0x52, 0xbe, 0x0f, 0x04, 0x00,
	0x00,
}
