// Code generated by protoc-gen-go. DO NOT EDIT.
// source: p4/config/v1/p4info.proto

package v1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// ids are allocated in such a way that it is possible based on an id to
// deduce the resource type (e.g. table, action, counter, ...). The
// most-significant byte of the 32-bit id encodes the resource type. The
// purpose of this enum is to define which value is used as the
// most-significant byte for each resource type. The P4 compiler must use
// these values when allocating ids for P4 objects. Other users of P4Info can
// refer to this enum to identify a resource type based on its id.
type P4Ids_Prefix int32

const (
	P4Ids_UNSPECIFIED P4Ids_Prefix = 0
	// P4 language built-ins
	P4Ids_ACTION            P4Ids_Prefix = 1
	P4Ids_TABLE             P4Ids_Prefix = 2
	P4Ids_VALUE_SET         P4Ids_Prefix = 3
	P4Ids_CONTROLLER_HEADER P4Ids_Prefix = 4
	// PSA externs
	P4Ids_PSA_EXTERNS_START P4Ids_Prefix = 16
	P4Ids_ACTION_PROFILE    P4Ids_Prefix = 17
	P4Ids_COUNTER           P4Ids_Prefix = 18
	P4Ids_DIRECT_COUNTER    P4Ids_Prefix = 19
	P4Ids_METER             P4Ids_Prefix = 20
	P4Ids_DIRECT_METER      P4Ids_Prefix = 21
	P4Ids_REGISTER          P4Ids_Prefix = 22
	P4Ids_DIGEST            P4Ids_Prefix = 23
	// externs for other architectures (vendor extensions)
	P4Ids_OTHER_EXTERNS_START P4Ids_Prefix = 128
	// max value for an unsigned 8-bit byte
	P4Ids_MAX P4Ids_Prefix = 255
)

var P4Ids_Prefix_name = map[int32]string{
	0:   "UNSPECIFIED",
	1:   "ACTION",
	2:   "TABLE",
	3:   "VALUE_SET",
	4:   "CONTROLLER_HEADER",
	16:  "PSA_EXTERNS_START",
	17:  "ACTION_PROFILE",
	18:  "COUNTER",
	19:  "DIRECT_COUNTER",
	20:  "METER",
	21:  "DIRECT_METER",
	22:  "REGISTER",
	23:  "DIGEST",
	128: "OTHER_EXTERNS_START",
	255: "MAX",
}

var P4Ids_Prefix_value = map[string]int32{
	"UNSPECIFIED":         0,
	"ACTION":              1,
	"TABLE":               2,
	"VALUE_SET":           3,
	"CONTROLLER_HEADER":   4,
	"PSA_EXTERNS_START":   16,
	"ACTION_PROFILE":      17,
	"COUNTER":             18,
	"DIRECT_COUNTER":      19,
	"METER":               20,
	"DIRECT_METER":        21,
	"REGISTER":            22,
	"DIGEST":              23,
	"OTHER_EXTERNS_START": 128,
	"MAX":                 255,
}

func (x P4Ids_Prefix) String() string {
	return proto.EnumName(P4Ids_Prefix_name, int32(x))
}

func (P4Ids_Prefix) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f35c73fb40fe4808, []int{3, 0}
}

type MatchField_MatchType int32

const (
	MatchField_UNSPECIFIED MatchField_MatchType = 0
	MatchField_EXACT       MatchField_MatchType = 2
	MatchField_LPM         MatchField_MatchType = 3
	MatchField_TERNARY     MatchField_MatchType = 4
	MatchField_RANGE       MatchField_MatchType = 5
	MatchField_OPTIONAL    MatchField_MatchType = 6
)

var MatchField_MatchType_name = map[int32]string{
	0: "UNSPECIFIED",
	2: "EXACT",
	3: "LPM",
	4: "TERNARY",
	5: "RANGE",
	6: "OPTIONAL",
}

var MatchField_MatchType_value = map[string]int32{
	"UNSPECIFIED": 0,
	"EXACT":       2,
	"LPM":         3,
	"TERNARY":     4,
	"RANGE":       5,
	"OPTIONAL":    6,
}

func (x MatchField_MatchType) String() string {
	return proto.EnumName(MatchField_MatchType_name, int32(x))
}

func (MatchField_MatchType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f35c73fb40fe4808, []int{7, 0}
}

// this enum can be extended in the future with other behaviors, such as
// "HARD_EVICTION"
type Table_IdleTimeoutBehavior int32

const (
	Table_NO_TIMEOUT     Table_IdleTimeoutBehavior = 0
	Table_NOTIFY_CONTROL Table_IdleTimeoutBehavior = 1
)

var Table_IdleTimeoutBehavior_name = map[int32]string{
	0: "NO_TIMEOUT",
	1: "NOTIFY_CONTROL",
}

var Table_IdleTimeoutBehavior_value = map[string]int32{
	"NO_TIMEOUT":     0,
	"NOTIFY_CONTROL": 1,
}

func (x Table_IdleTimeoutBehavior) String() string {
	return proto.EnumName(Table_IdleTimeoutBehavior_name, int32(x))
}

func (Table_IdleTimeoutBehavior) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f35c73fb40fe4808, []int{8, 0}
}

type ActionRef_Scope int32

const (
	ActionRef_TABLE_AND_DEFAULT ActionRef_Scope = 0
	ActionRef_TABLE_ONLY        ActionRef_Scope = 1
	ActionRef_DEFAULT_ONLY      ActionRef_Scope = 2
)

var ActionRef_Scope_name = map[int32]string{
	0: "TABLE_AND_DEFAULT",
	1: "TABLE_ONLY",
	2: "DEFAULT_ONLY",
}

var ActionRef_Scope_value = map[string]int32{
	"TABLE_AND_DEFAULT": 0,
	"TABLE_ONLY":        1,
	"DEFAULT_ONLY":      2,
}

func (x ActionRef_Scope) String() string {
	return proto.EnumName(ActionRef_Scope_name, int32(x))
}

func (ActionRef_Scope) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f35c73fb40fe4808, []int{9, 0}
}

// Corresponds to 'type' constructor parameter for Counter / DirectCounter in
// PSA
type CounterSpec_Unit int32

const (
	CounterSpec_UNSPECIFIED CounterSpec_Unit = 0
	CounterSpec_BYTES       CounterSpec_Unit = 1
	CounterSpec_PACKETS     CounterSpec_Unit = 2
	CounterSpec_BOTH        CounterSpec_Unit = 3
)

var CounterSpec_Unit_name = map[int32]string{
	0: "UNSPECIFIED",
	1: "BYTES",
	2: "PACKETS",
	3: "BOTH",
}

var CounterSpec_Unit_value = map[string]int32{
	"UNSPECIFIED": 0,
	"BYTES":       1,
	"PACKETS":     2,
	"BOTH":        3,
}

func (x CounterSpec_Unit) String() string {
	return proto.EnumName(CounterSpec_Unit_name, int32(x))
}

func (CounterSpec_Unit) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f35c73fb40fe4808, []int{12, 0}
}

// Corresponds to 'type' constructor parameter for Meter / DirectMeter in PSA
type MeterSpec_Unit int32

const (
	MeterSpec_UNSPECIFIED MeterSpec_Unit = 0
	MeterSpec_BYTES       MeterSpec_Unit = 1
	MeterSpec_PACKETS     MeterSpec_Unit = 2
)

var MeterSpec_Unit_name = map[int32]string{
	0: "UNSPECIFIED",
	1: "BYTES",
	2: "PACKETS",
}

var MeterSpec_Unit_value = map[string]int32{
	"UNSPECIFIED": 0,
	"BYTES":       1,
	"PACKETS":     2,
}

func (x MeterSpec_Unit) String() string {
	return proto.EnumName(MeterSpec_Unit_name, int32(x))
}

func (MeterSpec_Unit) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f35c73fb40fe4808, []int{15, 0}
}

type P4Info struct {
	PkgInfo                  *PkgInfo                    `protobuf:"bytes,1,opt,name=pkg_info,json=pkgInfo,proto3" json:"pkg_info,omitempty"`
	Tables                   []*Table                    `protobuf:"bytes,2,rep,name=tables,proto3" json:"tables,omitempty"`
	Actions                  []*Action                   `protobuf:"bytes,3,rep,name=actions,proto3" json:"actions,omitempty"`
	ActionProfiles           []*ActionProfile            `protobuf:"bytes,4,rep,name=action_profiles,json=actionProfiles,proto3" json:"action_profiles,omitempty"`
	Counters                 []*Counter                  `protobuf:"bytes,5,rep,name=counters,proto3" json:"counters,omitempty"`
	DirectCounters           []*DirectCounter            `protobuf:"bytes,6,rep,name=direct_counters,json=directCounters,proto3" json:"direct_counters,omitempty"`
	Meters                   []*Meter                    `protobuf:"bytes,7,rep,name=meters,proto3" json:"meters,omitempty"`
	DirectMeters             []*DirectMeter              `protobuf:"bytes,8,rep,name=direct_meters,json=directMeters,proto3" json:"direct_meters,omitempty"`
	ControllerPacketMetadata []*ControllerPacketMetadata `protobuf:"bytes,9,rep,name=controller_packet_metadata,json=controllerPacketMetadata,proto3" json:"controller_packet_metadata,omitempty"`
	ValueSets                []*ValueSet                 `protobuf:"bytes,10,rep,name=value_sets,json=valueSets,proto3" json:"value_sets,omitempty"`
	Registers                []*Register                 `protobuf:"bytes,11,rep,name=registers,proto3" json:"registers,omitempty"`
	Digests                  []*Digest                   `protobuf:"bytes,12,rep,name=digests,proto3" json:"digests,omitempty"`
	Externs                  []*Extern                   `protobuf:"bytes,100,rep,name=externs,proto3" json:"externs,omitempty"`
	TypeInfo                 *P4TypeInfo                 `protobuf:"bytes,200,opt,name=type_info,json=typeInfo,proto3" json:"type_info,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}                    `json:"-"`
	XXX_unrecognized         []byte                      `json:"-"`
	XXX_sizecache            int32                       `json:"-"`
}

func (m *P4Info) Reset()         { *m = P4Info{} }
func (m *P4Info) String() string { return proto.CompactTextString(m) }
func (*P4Info) ProtoMessage()    {}
func (*P4Info) Descriptor() ([]byte, []int) {
	return fileDescriptor_f35c73fb40fe4808, []int{0}
}

func (m *P4Info) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_P4Info.Unmarshal(m, b)
}
func (m *P4Info) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_P4Info.Marshal(b, m, deterministic)
}
func (m *P4Info) XXX_Merge(src proto.Message) {
	xxx_messageInfo_P4Info.Merge(m, src)
}
func (m *P4Info) XXX_Size() int {
	return xxx_messageInfo_P4Info.Size(m)
}
func (m *P4Info) XXX_DiscardUnknown() {
	xxx_messageInfo_P4Info.DiscardUnknown(m)
}

var xxx_messageInfo_P4Info proto.InternalMessageInfo

func (m *P4Info) GetPkgInfo() *PkgInfo {
	if m != nil {
		return m.PkgInfo
	}
	return nil
}

func (m *P4Info) GetTables() []*Table {
	if m != nil {
		return m.Tables
	}
	return nil
}

func (m *P4Info) GetActions() []*Action {
	if m != nil {
		return m.Actions
	}
	return nil
}

func (m *P4Info) GetActionProfiles() []*ActionProfile {
	if m != nil {
		return m.ActionProfiles
	}
	return nil
}

func (m *P4Info) GetCounters() []*Counter {
	if m != nil {
		return m.Counters
	}
	return nil
}

func (m *P4Info) GetDirectCounters() []*DirectCounter {
	if m != nil {
		return m.DirectCounters
	}
	return nil
}

func (m *P4Info) GetMeters() []*Meter {
	if m != nil {
		return m.Meters
	}
	return nil
}

func (m *P4Info) GetDirectMeters() []*DirectMeter {
	if m != nil {
		return m.DirectMeters
	}
	return nil
}

func (m *P4Info) GetControllerPacketMetadata() []*ControllerPacketMetadata {
	if m != nil {
		return m.ControllerPacketMetadata
	}
	return nil
}

func (m *P4Info) GetValueSets() []*ValueSet {
	if m != nil {
		return m.ValueSets
	}
	return nil
}

func (m *P4Info) GetRegisters() []*Register {
	if m != nil {
		return m.Registers
	}
	return nil
}

func (m *P4Info) GetDigests() []*Digest {
	if m != nil {
		return m.Digests
	}
	return nil
}

func (m *P4Info) GetExterns() []*Extern {
	if m != nil {
		return m.Externs
	}
	return nil
}

func (m *P4Info) GetTypeInfo() *P4TypeInfo {
	if m != nil {
		return m.TypeInfo
	}
	return nil
}

type Documentation struct {
	// A brief description of something, e.g. one sentence
	Brief string `protobuf:"bytes,1,opt,name=brief,proto3" json:"brief,omitempty"`
	// A more verbose description of something. Multiline is accepted. Markup
	// format (if any) is TBD.
	Description          string   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Documentation) Reset()         { *m = Documentation{} }
func (m *Documentation) String() string { return proto.CompactTextString(m) }
func (*Documentation) ProtoMessage()    {}
func (*Documentation) Descriptor() ([]byte, []int) {
	return fileDescriptor_f35c73fb40fe4808, []int{1}
}

func (m *Documentation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Documentation.Unmarshal(m, b)
}
func (m *Documentation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Documentation.Marshal(b, m, deterministic)
}
func (m *Documentation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Documentation.Merge(m, src)
}
func (m *Documentation) XXX_Size() int {
	return xxx_messageInfo_Documentation.Size(m)
}
func (m *Documentation) XXX_DiscardUnknown() {
	xxx_messageInfo_Documentation.DiscardUnknown(m)
}

var xxx_messageInfo_Documentation proto.InternalMessageInfo

func (m *Documentation) GetBrief() string {
	if m != nil {
		return m.Brief
	}
	return ""
}

func (m *Documentation) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

// Top-level package documentation describing the forwarding pipeline config
// Can be used to manage multiple P4 packages.
type PkgInfo struct {
	// a definitive name for this configuration, e.g. switch.p4_v1.0
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// configuration version, free-format string
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	// brief and detailed descriptions
	Doc *Documentation `protobuf:"bytes,3,opt,name=doc,proto3" json:"doc,omitempty"`
	// Miscellaneous metadata, free-form; a way to extend PkgInfo
	Annotations []string `protobuf:"bytes,4,rep,name=annotations,proto3" json:"annotations,omitempty"`
	// The location of `annotations[i]` is given by `annotation_locations[i]`.
	AnnotationLocations []*SourceLocation `protobuf:"bytes,10,rep,name=annotation_locations,json=annotationLocations,proto3" json:"annotation_locations,omitempty"`
	// the target architecture, e.g. "psa"
	Arch string `protobuf:"bytes,5,opt,name=arch,proto3" json:"arch,omitempty"`
	// organization which produced the configuration, e.g. "p4.org"
	Organization string `protobuf:"bytes,6,opt,name=organization,proto3" json:"organization,omitempty"`
	// contact info for support,e.g. "tech-support@acme.org"
	Contact string `protobuf:"bytes,7,opt,name=contact,proto3" json:"contact,omitempty"`
	// url for more information, e.g. "http://support.p4.org/ref/p4/switch.p4_v1.0"
	Url string `protobuf:"bytes,8,opt,name=url,proto3" json:"url,omitempty"`
	// Miscellaneous metadata, structured; a way to extend PkgInfo
	StructuredAnnotations []*StructuredAnnotation `protobuf:"bytes,9,rep,name=structured_annotations,json=structuredAnnotations,proto3" json:"structured_annotations,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                `json:"-"`
	XXX_unrecognized      []byte                  `json:"-"`
	XXX_sizecache         int32                   `json:"-"`
}

func (m *PkgInfo) Reset()         { *m = PkgInfo{} }
func (m *PkgInfo) String() string { return proto.CompactTextString(m) }
func (*PkgInfo) ProtoMessage()    {}
func (*PkgInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f35c73fb40fe4808, []int{2}
}

func (m *PkgInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PkgInfo.Unmarshal(m, b)
}
func (m *PkgInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PkgInfo.Marshal(b, m, deterministic)
}
func (m *PkgInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PkgInfo.Merge(m, src)
}
func (m *PkgInfo) XXX_Size() int {
	return xxx_messageInfo_PkgInfo.Size(m)
}
func (m *PkgInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PkgInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PkgInfo proto.InternalMessageInfo

func (m *PkgInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PkgInfo) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *PkgInfo) GetDoc() *Documentation {
	if m != nil {
		return m.Doc
	}
	return nil
}

func (m *PkgInfo) GetAnnotations() []string {
	if m != nil {
		return m.Annotations
	}
	return nil
}

func (m *PkgInfo) GetAnnotationLocations() []*SourceLocation {
	if m != nil {
		return m.AnnotationLocations
	}
	return nil
}

func (m *PkgInfo) GetArch() string {
	if m != nil {
		return m.Arch
	}
	return ""
}

func (m *PkgInfo) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *PkgInfo) GetContact() string {
	if m != nil {
		return m.Contact
	}
	return ""
}

func (m *PkgInfo) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *PkgInfo) GetStructuredAnnotations() []*StructuredAnnotation {
	if m != nil {
		return m.StructuredAnnotations
	}
	return nil
}

// wrapping the enum in a message to avoid name collisions in C++, where "enum
// values are siblings of their type, not children of it"
type P4Ids struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *P4Ids) Reset()         { *m = P4Ids{} }
func (m *P4Ids) String() string { return proto.CompactTextString(m) }
func (*P4Ids) ProtoMessage()    {}
func (*P4Ids) Descriptor() ([]byte, []int) {
	return fileDescriptor_f35c73fb40fe4808, []int{3}
}

func (m *P4Ids) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_P4Ids.Unmarshal(m, b)
}
func (m *P4Ids) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_P4Ids.Marshal(b, m, deterministic)
}
func (m *P4Ids) XXX_Merge(src proto.Message) {
	xxx_messageInfo_P4Ids.Merge(m, src)
}
func (m *P4Ids) XXX_Size() int {
	return xxx_messageInfo_P4Ids.Size(m)
}
func (m *P4Ids) XXX_DiscardUnknown() {
	xxx_messageInfo_P4Ids.DiscardUnknown(m)
}

var xxx_messageInfo_P4Ids proto.InternalMessageInfo

type Preamble struct {
	// ids share the same number-space; e.g. table ids cannot overlap with counter
	// ids. Even though this is irrelevant to this proto definition, the ids are
	// allocated in such a way that it is possible based on an id to deduce the
	// resource type (e.g. table, action, counter, ...). This means that code
	// using these ids can detect if the wrong resource type is used
	// somewhere. This also means that ids of different types can be mixed
	// (e.g. direct resource list for a table) without ambiguity. Note that id 0
	// is reserved and means "invalid id".
	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// fully qualified name of the P4 object, e.g. c1.c2.ipv4_lpm
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// an alias (alternative name) for the P4 object, probably shorter than its
	// fully qualified name. The only constraint is for it to be unique with
	// respect to other P4 objects of the same type. By default, the compiler uses
	// the shortest suffix of the name that uniquely identifies the object. For
	// example if the P4 program contains two tables with names s.c1.t and s.c2.t,
	// the default aliases will respectively be c1.t and c2.t. In the future, the
	// P4 programmer may also be able to override the default alias for any P4
	// object (TBD).
	Alias       string   `protobuf:"bytes,3,opt,name=alias,proto3" json:"alias,omitempty"`
	Annotations []string `protobuf:"bytes,4,rep,name=annotations,proto3" json:"annotations,omitempty"`
	// The location of `annotations[i]` is given by `annotation_locations[i]`.
	AnnotationLocations []*SourceLocation `protobuf:"bytes,7,rep,name=annotation_locations,json=annotationLocations,proto3" json:"annotation_locations,omitempty"`
	// Documentation of the entity
	Doc                   *Documentation          `protobuf:"bytes,5,opt,name=doc,proto3" json:"doc,omitempty"`
	StructuredAnnotations []*StructuredAnnotation `protobuf:"bytes,6,rep,name=structured_annotations,json=structuredAnnotations,proto3" json:"structured_annotations,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                `json:"-"`
	XXX_unrecognized      []byte                  `json:"-"`
	XXX_sizecache         int32                   `json:"-"`
}

func (m *Preamble) Reset()         { *m = Preamble{} }
func (m *Preamble) String() string { return proto.CompactTextString(m) }
func (*Preamble) ProtoMessage()    {}
func (*Preamble) Descriptor() ([]byte, []int) {
	return fileDescriptor_f35c73fb40fe4808, []int{4}
}

func (m *Preamble) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Preamble.Unmarshal(m, b)
}
func (m *Preamble) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Preamble.Marshal(b, m, deterministic)
}
func (m *Preamble) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Preamble.Merge(m, src)
}
func (m *Preamble) XXX_Size() int {
	return xxx_messageInfo_Preamble.Size(m)
}
func (m *Preamble) XXX_DiscardUnknown() {
	xxx_messageInfo_Preamble.DiscardUnknown(m)
}

var xxx_messageInfo_Preamble proto.InternalMessageInfo

func (m *Preamble) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Preamble) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Preamble) GetAlias() string {
	if m != nil {
		return m.Alias
	}
	return ""
}

func (m *Preamble) GetAnnotations() []string {
	if m != nil {
		return m.Annotations
	}
	return nil
}

func (m *Preamble) GetAnnotationLocations() []*SourceLocation {
	if m != nil {
		return m.AnnotationLocations
	}
	return nil
}

func (m *Preamble) GetDoc() *Documentation {
	if m != nil {
		return m.Doc
	}
	return nil
}

func (m *Preamble) GetStructuredAnnotations() []*StructuredAnnotation {
	if m != nil {
		return m.StructuredAnnotations
	}
	return nil
}

// used to group all extern instances of the same type in one message
type Extern struct {
	// the extern_type_id is unique for a given architecture and must be in the
	// range [0x81, 0xfe].
	ExternTypeId         uint32            `protobuf:"varint,1,opt,name=extern_type_id,json=externTypeId,proto3" json:"extern_type_id,omitempty"`
	ExternTypeName       string            `protobuf:"bytes,2,opt,name=extern_type_name,json=externTypeName,proto3" json:"extern_type_name,omitempty"`
	Instances            []*ExternInstance `protobuf:"bytes,3,rep,name=instances,proto3" json:"instances,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Extern) Reset()         { *m = Extern{} }
func (m *Extern) String() string { return proto.CompactTextString(m) }
func (*Extern) ProtoMessage()    {}
func (*Extern) Descriptor() ([]byte, []int) {
	return fileDescriptor_f35c73fb40fe4808, []int{5}
}

func (m *Extern) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Extern.Unmarshal(m, b)
}
func (m *Extern) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Extern.Marshal(b, m, deterministic)
}
func (m *Extern) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Extern.Merge(m, src)
}
func (m *Extern) XXX_Size() int {
	return xxx_messageInfo_Extern.Size(m)
}
func (m *Extern) XXX_DiscardUnknown() {
	xxx_messageInfo_Extern.DiscardUnknown(m)
}

var xxx_messageInfo_Extern proto.InternalMessageInfo

func (m *Extern) GetExternTypeId() uint32 {
	if m != nil {
		return m.ExternTypeId
	}
	return 0
}

func (m *Extern) GetExternTypeName() string {
	if m != nil {
		return m.ExternTypeName
	}
	return ""
}

func (m *Extern) GetInstances() []*ExternInstance {
	if m != nil {
		return m.Instances
	}
	return nil
}

type ExternInstance struct {
	Preamble *Preamble `protobuf:"bytes,1,opt,name=preamble,proto3" json:"preamble,omitempty"`
	// specific to the extern type, declared in a separate vendor-specific proto
	// file
	Info                 *any.Any `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExternInstance) Reset()         { *m = ExternInstance{} }
func (m *ExternInstance) String() string { return proto.CompactTextString(m) }
func (*ExternInstance) ProtoMessage()    {}
func (*ExternInstance) Descriptor() ([]byte, []int) {
	return fileDescriptor_f35c73fb40fe4808, []int{6}
}

func (m *ExternInstance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExternInstance.Unmarshal(m, b)
}
func (m *ExternInstance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExternInstance.Marshal(b, m, deterministic)
}
func (m *ExternInstance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExternInstance.Merge(m, src)
}
func (m *ExternInstance) XXX_Size() int {
	return xxx_messageInfo_ExternInstance.Size(m)
}
func (m *ExternInstance) XXX_DiscardUnknown() {
	xxx_messageInfo_ExternInstance.DiscardUnknown(m)
}

var xxx_messageInfo_ExternInstance proto.InternalMessageInfo

func (m *ExternInstance) GetPreamble() *Preamble {
	if m != nil {
		return m.Preamble
	}
	return nil
}

func (m *ExternInstance) GetInfo() *any.Any {
	if m != nil {
		return m.Info
	}
	return nil
}

type MatchField struct {
	Id          uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Annotations []string `protobuf:"bytes,3,rep,name=annotations,proto3" json:"annotations,omitempty"`
	// The location of `annotations[i]` is given by `annotation_locations[i]`.
	AnnotationLocations []*SourceLocation `protobuf:"bytes,10,rep,name=annotation_locations,json=annotationLocations,proto3" json:"annotation_locations,omitempty"`
	Bitwidth            int32             `protobuf:"varint,4,opt,name=bitwidth,proto3" json:"bitwidth,omitempty"`
	// Types that are valid to be assigned to Match:
	//	*MatchField_MatchType_
	//	*MatchField_OtherMatchType
	Match isMatchField_Match `protobuf_oneof:"match"`
	// Documentation of the match field
	Doc *Documentation `protobuf:"bytes,6,opt,name=doc,proto3" json:"doc,omitempty"`
	// unset if not user-defined type
	TypeName              *P4NamedType            `protobuf:"bytes,8,opt,name=type_name,json=typeName,proto3" json:"type_name,omitempty"`
	StructuredAnnotations []*StructuredAnnotation `protobuf:"bytes,9,rep,name=structured_annotations,json=structuredAnnotations,proto3" json:"structured_annotations,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                `json:"-"`
	XXX_unrecognized      []byte                  `json:"-"`
	XXX_sizecache         int32                   `json:"-"`
}

func (m *MatchField) Reset()         { *m = MatchField{} }
func (m *MatchField) String() string { return proto.CompactTextString(m) }
func (*MatchField) ProtoMessage()    {}
func (*MatchField) Descriptor() ([]byte, []int) {
	return fileDescriptor_f35c73fb40fe4808, []int{7}
}

func (m *MatchField) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MatchField.Unmarshal(m, b)
}
func (m *MatchField) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MatchField.Marshal(b, m, deterministic)
}
func (m *MatchField) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MatchField.Merge(m, src)
}
func (m *MatchField) XXX_Size() int {
	return xxx_messageInfo_MatchField.Size(m)
}
func (m *MatchField) XXX_DiscardUnknown() {
	xxx_messageInfo_MatchField.DiscardUnknown(m)
}

var xxx_messageInfo_MatchField proto.InternalMessageInfo

func (m *MatchField) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MatchField) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MatchField) GetAnnotations() []string {
	if m != nil {
		return m.Annotations
	}
	return nil
}

func (m *MatchField) GetAnnotationLocations() []*SourceLocation {
	if m != nil {
		return m.AnnotationLocations
	}
	return nil
}

func (m *MatchField) GetBitwidth() int32 {
	if m != nil {
		return m.Bitwidth
	}
	return 0
}

type isMatchField_Match interface {
	isMatchField_Match()
}

type MatchField_MatchType_ struct {
	MatchType MatchField_MatchType `protobuf:"varint,5,opt,name=match_type,json=matchType,proto3,enum=p4.config.v1.MatchField_MatchType,oneof"`
}

type MatchField_OtherMatchType struct {
	OtherMatchType string `protobuf:"bytes,7,opt,name=other_match_type,json=otherMatchType,proto3,oneof"`
}

func (*MatchField_MatchType_) isMatchField_Match() {}

func (*MatchField_OtherMatchType) isMatchField_Match() {}

func (m *MatchField) GetMatch() isMatchField_Match {
	if m != nil {
		return m.Match
	}
	return nil
}

func (m *MatchField) GetMatchType() MatchField_MatchType {
	if x, ok := m.GetMatch().(*MatchField_MatchType_); ok {
		return x.MatchType
	}
	return MatchField_UNSPECIFIED
}

func (m *MatchField) GetOtherMatchType() string {
	if x, ok := m.GetMatch().(*MatchField_OtherMatchType); ok {
		return x.OtherMatchType
	}
	return ""
}

func (m *MatchField) GetDoc() *Documentation {
	if m != nil {
		return m.Doc
	}
	return nil
}

func (m *MatchField) GetTypeName() *P4NamedType {
	if m != nil {
		return m.TypeName
	}
	return nil
}

func (m *MatchField) GetStructuredAnnotations() []*StructuredAnnotation {
	if m != nil {
		return m.StructuredAnnotations
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*MatchField) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*MatchField_MatchType_)(nil),
		(*MatchField_OtherMatchType)(nil),
	}
}

type Table struct {
	Preamble    *Preamble     `protobuf:"bytes,1,opt,name=preamble,proto3" json:"preamble,omitempty"`
	MatchFields []*MatchField `protobuf:"bytes,2,rep,name=match_fields,json=matchFields,proto3" json:"match_fields,omitempty"`
	// even when the table is indirect (see implementation_id) below, this field
	// includes all possible actions for the table; by using ActionRef instead of
	// a repeated field of action ids, each action reference in a P4 table is able
	// to have its own annotations
	ActionRefs []*ActionRef `protobuf:"bytes,3,rep,name=action_refs,json=actionRefs,proto3" json:"action_refs,omitempty"`
	// 0 (default value) means that the table does not have a const default action
	ConstDefaultActionId uint32 `protobuf:"varint,4,opt,name=const_default_action_id,json=constDefaultActionId,proto3" json:"const_default_action_id,omitempty"`
	// P4 id of the "implementation" for this table (e.g. action profile id); 0
	// (default value) means that the table is a regular (direct) match table. As
	// of today, only action profiles are supported but other table
	// implementations may be added in the future
	ImplementationId uint32 `protobuf:"varint,6,opt,name=implementation_id,json=implementationId,proto3" json:"implementation_id,omitempty"`
	// ids of the direct resources (if any) attached to this table; for now this
	// includes only direct counters and direct meters, but other resources may be
	// added in the future
	DirectResourceIds []uint32 `protobuf:"varint,7,rep,packed,name=direct_resource_ids,json=directResourceIds,proto3" json:"direct_resource_ids,omitempty"`
	Size              int64    `protobuf:"varint,8,opt,name=size,proto3" json:"size,omitempty"`
	// is idle timeout supported for this table?
	IdleTimeoutBehavior Table_IdleTimeoutBehavior `protobuf:"varint,9,opt,name=idle_timeout_behavior,json=idleTimeoutBehavior,proto3,enum=p4.config.v1.Table_IdleTimeoutBehavior" json:"idle_timeout_behavior,omitempty"`
	// table with static P4 entries, cannot be modified at runtime
	IsConstTable bool `protobuf:"varint,10,opt,name=is_const_table,json=isConstTable,proto3" json:"is_const_table,omitempty"`
	// architecture-specific table properties which are not part of the core P4
	// language or of the PSA architecture.
	OtherProperties      *any.Any `protobuf:"bytes,100,opt,name=other_properties,json=otherProperties,proto3" json:"other_properties,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Table) Reset()         { *m = Table{} }
func (m *Table) String() string { return proto.CompactTextString(m) }
func (*Table) ProtoMessage()    {}
func (*Table) Descriptor() ([]byte, []int) {
	return fileDescriptor_f35c73fb40fe4808, []int{8}
}

func (m *Table) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Table.Unmarshal(m, b)
}
func (m *Table) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Table.Marshal(b, m, deterministic)
}
func (m *Table) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Table.Merge(m, src)
}
func (m *Table) XXX_Size() int {
	return xxx_messageInfo_Table.Size(m)
}
func (m *Table) XXX_DiscardUnknown() {
	xxx_messageInfo_Table.DiscardUnknown(m)
}

var xxx_messageInfo_Table proto.InternalMessageInfo

func (m *Table) GetPreamble() *Preamble {
	if m != nil {
		return m.Preamble
	}
	return nil
}

func (m *Table) GetMatchFields() []*MatchField {
	if m != nil {
		return m.MatchFields
	}
	return nil
}

func (m *Table) GetActionRefs() []*ActionRef {
	if m != nil {
		return m.ActionRefs
	}
	return nil
}

func (m *Table) GetConstDefaultActionId() uint32 {
	if m != nil {
		return m.ConstDefaultActionId
	}
	return 0
}

func (m *Table) GetImplementationId() uint32 {
	if m != nil {
		return m.ImplementationId
	}
	return 0
}

func (m *Table) GetDirectResourceIds() []uint32 {
	if m != nil {
		return m.DirectResourceIds
	}
	return nil
}

func (m *Table) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *Table) GetIdleTimeoutBehavior() Table_IdleTimeoutBehavior {
	if m != nil {
		return m.IdleTimeoutBehavior
	}
	return Table_NO_TIMEOUT
}

func (m *Table) GetIsConstTable() bool {
	if m != nil {
		return m.IsConstTable
	}
	return false
}

func (m *Table) GetOtherProperties() *any.Any {
	if m != nil {
		return m.OtherProperties
	}
	return nil
}

// used to list all possible actions in a Table
type ActionRef struct {
	Id          uint32          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Scope       ActionRef_Scope `protobuf:"varint,3,opt,name=scope,proto3,enum=p4.config.v1.ActionRef_Scope" json:"scope,omitempty"`
	Annotations []string        `protobuf:"bytes,2,rep,name=annotations,proto3" json:"annotations,omitempty"`
	// The location of `annotations[i]` is given by `annotation_locations[i]`.
	AnnotationLocations   []*SourceLocation       `protobuf:"bytes,5,rep,name=annotation_locations,json=annotationLocations,proto3" json:"annotation_locations,omitempty"`
	StructuredAnnotations []*StructuredAnnotation `protobuf:"bytes,4,rep,name=structured_annotations,json=structuredAnnotations,proto3" json:"structured_annotations,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                `json:"-"`
	XXX_unrecognized      []byte                  `json:"-"`
	XXX_sizecache         int32                   `json:"-"`
}

func (m *ActionRef) Reset()         { *m = ActionRef{} }
func (m *ActionRef) String() string { return proto.CompactTextString(m) }
func (*ActionRef) ProtoMessage()    {}
func (*ActionRef) Descriptor() ([]byte, []int) {
	return fileDescriptor_f35c73fb40fe4808, []int{9}
}

func (m *ActionRef) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionRef.Unmarshal(m, b)
}
func (m *ActionRef) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionRef.Marshal(b, m, deterministic)
}
func (m *ActionRef) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionRef.Merge(m, src)
}
func (m *ActionRef) XXX_Size() int {
	return xxx_messageInfo_ActionRef.Size(m)
}
func (m *ActionRef) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionRef.DiscardUnknown(m)
}

var xxx_messageInfo_ActionRef proto.InternalMessageInfo

func (m *ActionRef) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ActionRef) GetScope() ActionRef_Scope {
	if m != nil {
		return m.Scope
	}
	return ActionRef_TABLE_AND_DEFAULT
}

func (m *ActionRef) GetAnnotations() []string {
	if m != nil {
		return m.Annotations
	}
	return nil
}

func (m *ActionRef) GetAnnotationLocations() []*SourceLocation {
	if m != nil {
		return m.AnnotationLocations
	}
	return nil
}

func (m *ActionRef) GetStructuredAnnotations() []*StructuredAnnotation {
	if m != nil {
		return m.StructuredAnnotations
	}
	return nil
}

type Action struct {
	Preamble             *Preamble       `protobuf:"bytes,1,opt,name=preamble,proto3" json:"preamble,omitempty"`
	Params               []*Action_Param `protobuf:"bytes,2,rep,name=params,proto3" json:"params,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Action) Reset()         { *m = Action{} }
func (m *Action) String() string { return proto.CompactTextString(m) }
func (*Action) ProtoMessage()    {}
func (*Action) Descriptor() ([]byte, []int) {
	return fileDescriptor_f35c73fb40fe4808, []int{10}
}

func (m *Action) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Action.Unmarshal(m, b)
}
func (m *Action) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Action.Marshal(b, m, deterministic)
}
func (m *Action) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Action.Merge(m, src)
}
func (m *Action) XXX_Size() int {
	return xxx_messageInfo_Action.Size(m)
}
func (m *Action) XXX_DiscardUnknown() {
	xxx_messageInfo_Action.DiscardUnknown(m)
}

var xxx_messageInfo_Action proto.InternalMessageInfo

func (m *Action) GetPreamble() *Preamble {
	if m != nil {
		return m.Preamble
	}
	return nil
}

func (m *Action) GetParams() []*Action_Param {
	if m != nil {
		return m.Params
	}
	return nil
}

type Action_Param struct {
	Id          uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Annotations []string `protobuf:"bytes,3,rep,name=annotations,proto3" json:"annotations,omitempty"`
	// The location of `annotations[i]` is given by `annotation_locations[i]`.
	AnnotationLocations []*SourceLocation `protobuf:"bytes,8,rep,name=annotation_locations,json=annotationLocations,proto3" json:"annotation_locations,omitempty"`
	Bitwidth            int32             `protobuf:"varint,4,opt,name=bitwidth,proto3" json:"bitwidth,omitempty"`
	// Documentation of the Param
	Doc *Documentation `protobuf:"bytes,5,opt,name=doc,proto3" json:"doc,omitempty"`
	// unset if not user-defined type
	TypeName              *P4NamedType            `protobuf:"bytes,6,opt,name=type_name,json=typeName,proto3" json:"type_name,omitempty"`
	StructuredAnnotations []*StructuredAnnotation `protobuf:"bytes,7,rep,name=structured_annotations,json=structuredAnnotations,proto3" json:"structured_annotations,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                `json:"-"`
	XXX_unrecognized      []byte                  `json:"-"`
	XXX_sizecache         int32                   `json:"-"`
}

func (m *Action_Param) Reset()         { *m = Action_Param{} }
func (m *Action_Param) String() string { return proto.CompactTextString(m) }
func (*Action_Param) ProtoMessage()    {}
func (*Action_Param) Descriptor() ([]byte, []int) {
	return fileDescriptor_f35c73fb40fe4808, []int{10, 0}
}

func (m *Action_Param) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Action_Param.Unmarshal(m, b)
}
func (m *Action_Param) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Action_Param.Marshal(b, m, deterministic)
}
func (m *Action_Param) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Action_Param.Merge(m, src)
}
func (m *Action_Param) XXX_Size() int {
	return xxx_messageInfo_Action_Param.Size(m)
}
func (m *Action_Param) XXX_DiscardUnknown() {
	xxx_messageInfo_Action_Param.DiscardUnknown(m)
}

var xxx_messageInfo_Action_Param proto.InternalMessageInfo

func (m *Action_Param) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Action_Param) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Action_Param) GetAnnotations() []string {
	if m != nil {
		return m.Annotations
	}
	return nil
}

func (m *Action_Param) GetAnnotationLocations() []*SourceLocation {
	if m != nil {
		return m.AnnotationLocations
	}
	return nil
}

func (m *Action_Param) GetBitwidth() int32 {
	if m != nil {
		return m.Bitwidth
	}
	return 0
}

func (m *Action_Param) GetDoc() *Documentation {
	if m != nil {
		return m.Doc
	}
	return nil
}

func (m *Action_Param) GetTypeName() *P4NamedType {
	if m != nil {
		return m.TypeName
	}
	return nil
}

func (m *Action_Param) GetStructuredAnnotations() []*StructuredAnnotation {
	if m != nil {
		return m.StructuredAnnotations
	}
	return nil
}

type ActionProfile struct {
	Preamble *Preamble `protobuf:"bytes,1,opt,name=preamble,proto3" json:"preamble,omitempty"`
	// the ids of the tables sharing this action profile
	TableIds []uint32 `protobuf:"varint,2,rep,packed,name=table_ids,json=tableIds,proto3" json:"table_ids,omitempty"`
	// true iff the action profile used dynamic selection
	WithSelector bool `protobuf:"varint,3,opt,name=with_selector,json=withSelector,proto3" json:"with_selector,omitempty"`
	// max number of weighted member entries in action profile (across all
	// selector groups, if the action profile has a selector)
	Size int64 `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	// max number of weighted member entries in any given selector group, or 0 if
	// the action profile does not have a selector
	MaxGroupSize         int32    `protobuf:"varint,5,opt,name=max_group_size,json=maxGroupSize,proto3" json:"max_group_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActionProfile) Reset()         { *m = ActionProfile{} }
func (m *ActionProfile) String() string { return proto.CompactTextString(m) }
func (*ActionProfile) ProtoMessage()    {}
func (*ActionProfile) Descriptor() ([]byte, []int) {
	return fileDescriptor_f35c73fb40fe4808, []int{11}
}

func (m *ActionProfile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionProfile.Unmarshal(m, b)
}
func (m *ActionProfile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionProfile.Marshal(b, m, deterministic)
}
func (m *ActionProfile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionProfile.Merge(m, src)
}
func (m *ActionProfile) XXX_Size() int {
	return xxx_messageInfo_ActionProfile.Size(m)
}
func (m *ActionProfile) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionProfile.DiscardUnknown(m)
}

var xxx_messageInfo_ActionProfile proto.InternalMessageInfo

func (m *ActionProfile) GetPreamble() *Preamble {
	if m != nil {
		return m.Preamble
	}
	return nil
}

func (m *ActionProfile) GetTableIds() []uint32 {
	if m != nil {
		return m.TableIds
	}
	return nil
}

func (m *ActionProfile) GetWithSelector() bool {
	if m != nil {
		return m.WithSelector
	}
	return false
}

func (m *ActionProfile) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *ActionProfile) GetMaxGroupSize() int32 {
	if m != nil {
		return m.MaxGroupSize
	}
	return 0
}

type CounterSpec struct {
	Unit                 CounterSpec_Unit `protobuf:"varint,1,opt,name=unit,proto3,enum=p4.config.v1.CounterSpec_Unit" json:"unit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *CounterSpec) Reset()         { *m = CounterSpec{} }
func (m *CounterSpec) String() string { return proto.CompactTextString(m) }
func (*CounterSpec) ProtoMessage()    {}
func (*CounterSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_f35c73fb40fe4808, []int{12}
}

func (m *CounterSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CounterSpec.Unmarshal(m, b)
}
func (m *CounterSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CounterSpec.Marshal(b, m, deterministic)
}
func (m *CounterSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CounterSpec.Merge(m, src)
}
func (m *CounterSpec) XXX_Size() int {
	return xxx_messageInfo_CounterSpec.Size(m)
}
func (m *CounterSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_CounterSpec.DiscardUnknown(m)
}

var xxx_messageInfo_CounterSpec proto.InternalMessageInfo

func (m *CounterSpec) GetUnit() CounterSpec_Unit {
	if m != nil {
		return m.Unit
	}
	return CounterSpec_UNSPECIFIED
}

type Counter struct {
	Preamble *Preamble    `protobuf:"bytes,1,opt,name=preamble,proto3" json:"preamble,omitempty"`
	Spec     *CounterSpec `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	// number of entries in the counter array
	Size int64 `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	// unset if index is not user-defined type
	IndexTypeName        *P4NamedType `protobuf:"bytes,4,opt,name=index_type_name,json=indexTypeName,proto3" json:"index_type_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Counter) Reset()         { *m = Counter{} }
func (m *Counter) String() string { return proto.CompactTextString(m) }
func (*Counter) ProtoMessage()    {}
func (*Counter) Descriptor() ([]byte, []int) {
	return fileDescriptor_f35c73fb40fe4808, []int{13}
}

func (m *Counter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Counter.Unmarshal(m, b)
}
func (m *Counter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Counter.Marshal(b, m, deterministic)
}
func (m *Counter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Counter.Merge(m, src)
}
func (m *Counter) XXX_Size() int {
	return xxx_messageInfo_Counter.Size(m)
}
func (m *Counter) XXX_DiscardUnknown() {
	xxx_messageInfo_Counter.DiscardUnknown(m)
}

var xxx_messageInfo_Counter proto.InternalMessageInfo

func (m *Counter) GetPreamble() *Preamble {
	if m != nil {
		return m.Preamble
	}
	return nil
}

func (m *Counter) GetSpec() *CounterSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *Counter) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *Counter) GetIndexTypeName() *P4NamedType {
	if m != nil {
		return m.IndexTypeName
	}
	return nil
}

type DirectCounter struct {
	Preamble *Preamble    `protobuf:"bytes,1,opt,name=preamble,proto3" json:"preamble,omitempty"`
	Spec     *CounterSpec `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	// the id of the table to which the counter is attached
	DirectTableId        uint32   `protobuf:"varint,3,opt,name=direct_table_id,json=directTableId,proto3" json:"direct_table_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DirectCounter) Reset()         { *m = DirectCounter{} }
func (m *DirectCounter) String() string { return proto.CompactTextString(m) }
func (*DirectCounter) ProtoMessage()    {}
func (*DirectCounter) Descriptor() ([]byte, []int) {
	return fileDescriptor_f35c73fb40fe4808, []int{14}
}

func (m *DirectCounter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DirectCounter.Unmarshal(m, b)
}
func (m *DirectCounter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DirectCounter.Marshal(b, m, deterministic)
}
func (m *DirectCounter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DirectCounter.Merge(m, src)
}
func (m *DirectCounter) XXX_Size() int {
	return xxx_messageInfo_DirectCounter.Size(m)
}
func (m *DirectCounter) XXX_DiscardUnknown() {
	xxx_messageInfo_DirectCounter.DiscardUnknown(m)
}

var xxx_messageInfo_DirectCounter proto.InternalMessageInfo

func (m *DirectCounter) GetPreamble() *Preamble {
	if m != nil {
		return m.Preamble
	}
	return nil
}

func (m *DirectCounter) GetSpec() *CounterSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *DirectCounter) GetDirectTableId() uint32 {
	if m != nil {
		return m.DirectTableId
	}
	return 0
}

type MeterSpec struct {
	Unit                 MeterSpec_Unit `protobuf:"varint,1,opt,name=unit,proto3,enum=p4.config.v1.MeterSpec_Unit" json:"unit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *MeterSpec) Reset()         { *m = MeterSpec{} }
func (m *MeterSpec) String() string { return proto.CompactTextString(m) }
func (*MeterSpec) ProtoMessage()    {}
func (*MeterSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_f35c73fb40fe4808, []int{15}
}

func (m *MeterSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MeterSpec.Unmarshal(m, b)
}
func (m *MeterSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MeterSpec.Marshal(b, m, deterministic)
}
func (m *MeterSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MeterSpec.Merge(m, src)
}
func (m *MeterSpec) XXX_Size() int {
	return xxx_messageInfo_MeterSpec.Size(m)
}
func (m *MeterSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_MeterSpec.DiscardUnknown(m)
}

var xxx_messageInfo_MeterSpec proto.InternalMessageInfo

func (m *MeterSpec) GetUnit() MeterSpec_Unit {
	if m != nil {
		return m.Unit
	}
	return MeterSpec_UNSPECIFIED
}

type Meter struct {
	Preamble *Preamble  `protobuf:"bytes,1,opt,name=preamble,proto3" json:"preamble,omitempty"`
	Spec     *MeterSpec `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	// number of entries in the meter array
	Size int64 `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	// unset if index is not user-defined type
	IndexTypeName        *P4NamedType `protobuf:"bytes,4,opt,name=index_type_name,json=indexTypeName,proto3" json:"index_type_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Meter) Reset()         { *m = Meter{} }
func (m *Meter) String() string { return proto.CompactTextString(m) }
func (*Meter) ProtoMessage()    {}
func (*Meter) Descriptor() ([]byte, []int) {
	return fileDescriptor_f35c73fb40fe4808, []int{16}
}

func (m *Meter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Meter.Unmarshal(m, b)
}
func (m *Meter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Meter.Marshal(b, m, deterministic)
}
func (m *Meter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Meter.Merge(m, src)
}
func (m *Meter) XXX_Size() int {
	return xxx_messageInfo_Meter.Size(m)
}
func (m *Meter) XXX_DiscardUnknown() {
	xxx_messageInfo_Meter.DiscardUnknown(m)
}

var xxx_messageInfo_Meter proto.InternalMessageInfo

func (m *Meter) GetPreamble() *Preamble {
	if m != nil {
		return m.Preamble
	}
	return nil
}

func (m *Meter) GetSpec() *MeterSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *Meter) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *Meter) GetIndexTypeName() *P4NamedType {
	if m != nil {
		return m.IndexTypeName
	}
	return nil
}

type DirectMeter struct {
	Preamble *Preamble  `protobuf:"bytes,1,opt,name=preamble,proto3" json:"preamble,omitempty"`
	Spec     *MeterSpec `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	// the id of the table to which the meter is attached
	DirectTableId        uint32   `protobuf:"varint,3,opt,name=direct_table_id,json=directTableId,proto3" json:"direct_table_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DirectMeter) Reset()         { *m = DirectMeter{} }
func (m *DirectMeter) String() string { return proto.CompactTextString(m) }
func (*DirectMeter) ProtoMessage()    {}
func (*DirectMeter) Descriptor() ([]byte, []int) {
	return fileDescriptor_f35c73fb40fe4808, []int{17}
}

func (m *DirectMeter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DirectMeter.Unmarshal(m, b)
}
func (m *DirectMeter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DirectMeter.Marshal(b, m, deterministic)
}
func (m *DirectMeter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DirectMeter.Merge(m, src)
}
func (m *DirectMeter) XXX_Size() int {
	return xxx_messageInfo_DirectMeter.Size(m)
}
func (m *DirectMeter) XXX_DiscardUnknown() {
	xxx_messageInfo_DirectMeter.DiscardUnknown(m)
}

var xxx_messageInfo_DirectMeter proto.InternalMessageInfo

func (m *DirectMeter) GetPreamble() *Preamble {
	if m != nil {
		return m.Preamble
	}
	return nil
}

func (m *DirectMeter) GetSpec() *MeterSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *DirectMeter) GetDirectTableId() uint32 {
	if m != nil {
		return m.DirectTableId
	}
	return 0
}

// Any metadata associated with controller Packet-IO (Packet-In or Packet-Out)
// is modeled as P4 headers carrying special annotations
// @controller_header("packet_out") and @controller_header("packet_in")
// respectively. There can be at most one header each with these annotations.
// This message captures the info contained within these special headers,
// and used in p4runtime.proto to supply the metadata.
type ControllerPacketMetadata struct {
	// preamble.name and preamble.id will specify header type ("packet_out" or
	// "packet_in" for now).
	Preamble *Preamble `protobuf:"bytes,1,opt,name=preamble,proto3" json:"preamble,omitempty"`
	// Ordered based on header layout.
	// This is a constraint on the generator of this P4Info.
	Metadata             []*ControllerPacketMetadata_Metadata `protobuf:"bytes,2,rep,name=metadata,proto3" json:"metadata,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *ControllerPacketMetadata) Reset()         { *m = ControllerPacketMetadata{} }
func (m *ControllerPacketMetadata) String() string { return proto.CompactTextString(m) }
func (*ControllerPacketMetadata) ProtoMessage()    {}
func (*ControllerPacketMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_f35c73fb40fe4808, []int{18}
}

func (m *ControllerPacketMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ControllerPacketMetadata.Unmarshal(m, b)
}
func (m *ControllerPacketMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ControllerPacketMetadata.Marshal(b, m, deterministic)
}
func (m *ControllerPacketMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ControllerPacketMetadata.Merge(m, src)
}
func (m *ControllerPacketMetadata) XXX_Size() int {
	return xxx_messageInfo_ControllerPacketMetadata.Size(m)
}
func (m *ControllerPacketMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_ControllerPacketMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_ControllerPacketMetadata proto.InternalMessageInfo

func (m *ControllerPacketMetadata) GetPreamble() *Preamble {
	if m != nil {
		return m.Preamble
	}
	return nil
}

func (m *ControllerPacketMetadata) GetMetadata() []*ControllerPacketMetadata_Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type ControllerPacketMetadata_Metadata struct {
	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// This is the name of the header field (not fully-qualified), similar
	// to e.g. Action.Param.name.
	Name        string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Annotations []string `protobuf:"bytes,3,rep,name=annotations,proto3" json:"annotations,omitempty"`
	// The location of `annotations[i]` is given by `annotation_locations[i]`.
	AnnotationLocations []*SourceLocation `protobuf:"bytes,7,rep,name=annotation_locations,json=annotationLocations,proto3" json:"annotation_locations,omitempty"`
	Bitwidth            int32             `protobuf:"varint,4,opt,name=bitwidth,proto3" json:"bitwidth,omitempty"`
	// unset if not user-defined type
	TypeName              *P4NamedType            `protobuf:"bytes,5,opt,name=type_name,json=typeName,proto3" json:"type_name,omitempty"`
	StructuredAnnotations []*StructuredAnnotation `protobuf:"bytes,6,rep,name=structured_annotations,json=structuredAnnotations,proto3" json:"structured_annotations,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                `json:"-"`
	XXX_unrecognized      []byte                  `json:"-"`
	XXX_sizecache         int32                   `json:"-"`
}

func (m *ControllerPacketMetadata_Metadata) Reset()         { *m = ControllerPacketMetadata_Metadata{} }
func (m *ControllerPacketMetadata_Metadata) String() string { return proto.CompactTextString(m) }
func (*ControllerPacketMetadata_Metadata) ProtoMessage()    {}
func (*ControllerPacketMetadata_Metadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_f35c73fb40fe4808, []int{18, 0}
}

func (m *ControllerPacketMetadata_Metadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ControllerPacketMetadata_Metadata.Unmarshal(m, b)
}
func (m *ControllerPacketMetadata_Metadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ControllerPacketMetadata_Metadata.Marshal(b, m, deterministic)
}
func (m *ControllerPacketMetadata_Metadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ControllerPacketMetadata_Metadata.Merge(m, src)
}
func (m *ControllerPacketMetadata_Metadata) XXX_Size() int {
	return xxx_messageInfo_ControllerPacketMetadata_Metadata.Size(m)
}
func (m *ControllerPacketMetadata_Metadata) XXX_DiscardUnknown() {
	xxx_messageInfo_ControllerPacketMetadata_Metadata.DiscardUnknown(m)
}

var xxx_messageInfo_ControllerPacketMetadata_Metadata proto.InternalMessageInfo

func (m *ControllerPacketMetadata_Metadata) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ControllerPacketMetadata_Metadata) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ControllerPacketMetadata_Metadata) GetAnnotations() []string {
	if m != nil {
		return m.Annotations
	}
	return nil
}

func (m *ControllerPacketMetadata_Metadata) GetAnnotationLocations() []*SourceLocation {
	if m != nil {
		return m.AnnotationLocations
	}
	return nil
}

func (m *ControllerPacketMetadata_Metadata) GetBitwidth() int32 {
	if m != nil {
		return m.Bitwidth
	}
	return 0
}

func (m *ControllerPacketMetadata_Metadata) GetTypeName() *P4NamedType {
	if m != nil {
		return m.TypeName
	}
	return nil
}

func (m *ControllerPacketMetadata_Metadata) GetStructuredAnnotations() []*StructuredAnnotation {
	if m != nil {
		return m.StructuredAnnotations
	}
	return nil
}

type ValueSet struct {
	Preamble *Preamble     `protobuf:"bytes,1,opt,name=preamble,proto3" json:"preamble,omitempty"`
	Match    []*MatchField `protobuf:"bytes,2,rep,name=match,proto3" json:"match,omitempty"`
	// number of entries in the value_set, as per the P4 constructor call.
	Size                 int32    `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ValueSet) Reset()         { *m = ValueSet{} }
func (m *ValueSet) String() string { return proto.CompactTextString(m) }
func (*ValueSet) ProtoMessage()    {}
func (*ValueSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_f35c73fb40fe4808, []int{19}
}

func (m *ValueSet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValueSet.Unmarshal(m, b)
}
func (m *ValueSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValueSet.Marshal(b, m, deterministic)
}
func (m *ValueSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValueSet.Merge(m, src)
}
func (m *ValueSet) XXX_Size() int {
	return xxx_messageInfo_ValueSet.Size(m)
}
func (m *ValueSet) XXX_DiscardUnknown() {
	xxx_messageInfo_ValueSet.DiscardUnknown(m)
}

var xxx_messageInfo_ValueSet proto.InternalMessageInfo

func (m *ValueSet) GetPreamble() *Preamble {
	if m != nil {
		return m.Preamble
	}
	return nil
}

func (m *ValueSet) GetMatch() []*MatchField {
	if m != nil {
		return m.Match
	}
	return nil
}

func (m *ValueSet) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

type Register struct {
	Preamble *Preamble       `protobuf:"bytes,1,opt,name=preamble,proto3" json:"preamble,omitempty"`
	TypeSpec *P4DataTypeSpec `protobuf:"bytes,2,opt,name=type_spec,json=typeSpec,proto3" json:"type_spec,omitempty"`
	Size     int32           `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	// unset if index is not user-defined type
	IndexTypeName        *P4NamedType `protobuf:"bytes,4,opt,name=index_type_name,json=indexTypeName,proto3" json:"index_type_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Register) Reset()         { *m = Register{} }
func (m *Register) String() string { return proto.CompactTextString(m) }
func (*Register) ProtoMessage()    {}
func (*Register) Descriptor() ([]byte, []int) {
	return fileDescriptor_f35c73fb40fe4808, []int{20}
}

func (m *Register) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Register.Unmarshal(m, b)
}
func (m *Register) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Register.Marshal(b, m, deterministic)
}
func (m *Register) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Register.Merge(m, src)
}
func (m *Register) XXX_Size() int {
	return xxx_messageInfo_Register.Size(m)
}
func (m *Register) XXX_DiscardUnknown() {
	xxx_messageInfo_Register.DiscardUnknown(m)
}

var xxx_messageInfo_Register proto.InternalMessageInfo

func (m *Register) GetPreamble() *Preamble {
	if m != nil {
		return m.Preamble
	}
	return nil
}

func (m *Register) GetTypeSpec() *P4DataTypeSpec {
	if m != nil {
		return m.TypeSpec
	}
	return nil
}

func (m *Register) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *Register) GetIndexTypeName() *P4NamedType {
	if m != nil {
		return m.IndexTypeName
	}
	return nil
}

type Digest struct {
	Preamble             *Preamble       `protobuf:"bytes,1,opt,name=preamble,proto3" json:"preamble,omitempty"`
	TypeSpec             *P4DataTypeSpec `protobuf:"bytes,2,opt,name=type_spec,json=typeSpec,proto3" json:"type_spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Digest) Reset()         { *m = Digest{} }
func (m *Digest) String() string { return proto.CompactTextString(m) }
func (*Digest) ProtoMessage()    {}
func (*Digest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f35c73fb40fe4808, []int{21}
}

func (m *Digest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Digest.Unmarshal(m, b)
}
func (m *Digest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Digest.Marshal(b, m, deterministic)
}
func (m *Digest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Digest.Merge(m, src)
}
func (m *Digest) XXX_Size() int {
	return xxx_messageInfo_Digest.Size(m)
}
func (m *Digest) XXX_DiscardUnknown() {
	xxx_messageInfo_Digest.DiscardUnknown(m)
}

var xxx_messageInfo_Digest proto.InternalMessageInfo

func (m *Digest) GetPreamble() *Preamble {
	if m != nil {
		return m.Preamble
	}
	return nil
}

func (m *Digest) GetTypeSpec() *P4DataTypeSpec {
	if m != nil {
		return m.TypeSpec
	}
	return nil
}

func init() {
	proto.RegisterEnum("p4.config.v1.P4Ids_Prefix", P4Ids_Prefix_name, P4Ids_Prefix_value)
	proto.RegisterEnum("p4.config.v1.MatchField_MatchType", MatchField_MatchType_name, MatchField_MatchType_value)
	proto.RegisterEnum("p4.config.v1.Table_IdleTimeoutBehavior", Table_IdleTimeoutBehavior_name, Table_IdleTimeoutBehavior_value)
	proto.RegisterEnum("p4.config.v1.ActionRef_Scope", ActionRef_Scope_name, ActionRef_Scope_value)
	proto.RegisterEnum("p4.config.v1.CounterSpec_Unit", CounterSpec_Unit_name, CounterSpec_Unit_value)
	proto.RegisterEnum("p4.config.v1.MeterSpec_Unit", MeterSpec_Unit_name, MeterSpec_Unit_value)
	proto.RegisterType((*P4Info)(nil), "p4.config.v1.P4Info")
	proto.RegisterType((*Documentation)(nil), "p4.config.v1.Documentation")
	proto.RegisterType((*PkgInfo)(nil), "p4.config.v1.PkgInfo")
	proto.RegisterType((*P4Ids)(nil), "p4.config.v1.P4Ids")
	proto.RegisterType((*Preamble)(nil), "p4.config.v1.Preamble")
	proto.RegisterType((*Extern)(nil), "p4.config.v1.Extern")
	proto.RegisterType((*ExternInstance)(nil), "p4.config.v1.ExternInstance")
	proto.RegisterType((*MatchField)(nil), "p4.config.v1.MatchField")
	proto.RegisterType((*Table)(nil), "p4.config.v1.Table")
	proto.RegisterType((*ActionRef)(nil), "p4.config.v1.ActionRef")
	proto.RegisterType((*Action)(nil), "p4.config.v1.Action")
	proto.RegisterType((*Action_Param)(nil), "p4.config.v1.Action.Param")
	proto.RegisterType((*ActionProfile)(nil), "p4.config.v1.ActionProfile")
	proto.RegisterType((*CounterSpec)(nil), "p4.config.v1.CounterSpec")
	proto.RegisterType((*Counter)(nil), "p4.config.v1.Counter")
	proto.RegisterType((*DirectCounter)(nil), "p4.config.v1.DirectCounter")
	proto.RegisterType((*MeterSpec)(nil), "p4.config.v1.MeterSpec")
	proto.RegisterType((*Meter)(nil), "p4.config.v1.Meter")
	proto.RegisterType((*DirectMeter)(nil), "p4.config.v1.DirectMeter")
	proto.RegisterType((*ControllerPacketMetadata)(nil), "p4.config.v1.ControllerPacketMetadata")
	proto.RegisterType((*ControllerPacketMetadata_Metadata)(nil), "p4.config.v1.ControllerPacketMetadata.Metadata")
	proto.RegisterType((*ValueSet)(nil), "p4.config.v1.ValueSet")
	proto.RegisterType((*Register)(nil), "p4.config.v1.Register")
	proto.RegisterType((*Digest)(nil), "p4.config.v1.Digest")
}

func init() { proto.RegisterFile("p4/config/v1/p4info.proto", fileDescriptor_f35c73fb40fe4808) }

var fileDescriptor_f35c73fb40fe4808 = []byte{
	// 1980 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x59, 0xdd, 0x6e, 0xdb, 0xc8,
	0x15, 0x8e, 0x7e, 0x28, 0x51, 0x47, 0x3f, 0x61, 0xc6, 0x4e, 0x42, 0x7b, 0xd3, 0xc2, 0x60, 0x17,
	0x5b, 0xa3, 0x41, 0xa4, 0x8d, 0xd7, 0x5b, 0x34, 0x2d, 0xd0, 0x96, 0x96, 0x68, 0x5b, 0x58, 0x59,
	0x12, 0x46, 0x74, 0x10, 0xb7, 0x17, 0x04, 0x4d, 0x8e, 0x64, 0x22, 0x12, 0x49, 0x90, 0x94, 0xe3,
	0x04, 0xbd, 0x28, 0x7a, 0xd3, 0x17, 0x28, 0x8a, 0xa2, 0x0f, 0xd1, 0x57, 0x28, 0x8a, 0xde, 0xf4,
	0x72, 0x81, 0x5e, 0xf5, 0xae, 0x4f, 0xd0, 0xbe, 0x40, 0x8b, 0x16, 0x33, 0x43, 0xd2, 0x92, 0x22,
	0x61, 0xbd, 0x72, 0x9c, 0xbb, 0x99, 0x73, 0xbe, 0x19, 0xce, 0x9c, 0xf3, 0x9d, 0x1f, 0x8d, 0x60,
	0xcb, 0xdf, 0x6f, 0x58, 0x9e, 0x3b, 0x74, 0x46, 0x8d, 0xcb, 0xe7, 0x0d, 0x7f, 0xdf, 0x71, 0x87,
	0x5e, 0xdd, 0x0f, 0xbc, 0xc8, 0x43, 0x15, 0x7f, 0xbf, 0xce, 0x55, 0xf5, 0xcb, 0xe7, 0xdb, 0x5b,
	0x23, 0xcf, 0x1b, 0x8d, 0x49, 0x83, 0xe9, 0xce, 0xa7, 0xc3, 0x86, 0xe9, 0xbe, 0xe5, 0xc0, 0xed,
	0xed, 0x85, 0x3d, 0xa2, 0xb7, 0x3e, 0x09, 0xb9, 0x4e, 0xf9, 0x53, 0x01, 0x0a, 0xfd, 0xfd, 0xb6,
	0x3b, 0xf4, 0xd0, 0xe7, 0x20, 0xfa, 0xaf, 0x47, 0x06, 0xfd, 0x82, 0x9c, 0xd9, 0xc9, 0xec, 0x96,
	0xf7, 0x1e, 0xd6, 0x67, 0x3f, 0x51, 0xef, 0xbf, 0x1e, 0x51, 0x20, 0x2e, 0xfa, 0x7c, 0x80, 0x9e,
	0x42, 0x21, 0x32, 0xcf, 0xc7, 0x24, 0x94, 0xb3, 0x3b, 0xb9, 0xdd, 0xf2, 0xde, 0xc6, 0x3c, 0x5e,
	0xa7, 0x3a, 0x1c, 0x43, 0x50, 0x1d, 0x8a, 0xa6, 0x15, 0x39, 0x9e, 0x1b, 0xca, 0x39, 0x86, 0xde,
	0x9c, 0x47, 0xab, 0x4c, 0x89, 0x13, 0x10, 0x6a, 0xc1, 0x7d, 0x3e, 0x34, 0xfc, 0xc0, 0x1b, 0x3a,
	0xf4, 0x2b, 0x79, 0xb6, 0xee, 0x93, 0x65, 0xeb, 0xfa, 0x1c, 0x83, 0x6b, 0xe6, 0xec, 0x34, 0x44,
	0xcf, 0x41, 0xb4, 0xbc, 0xa9, 0x1b, 0x91, 0x20, 0x94, 0x05, 0xb6, 0x7c, 0xe1, 0x52, 0x4d, 0xae,
	0xc5, 0x29, 0x8c, 0x7e, 0xd8, 0x76, 0x02, 0x62, 0x45, 0x46, 0xba, 0xb2, 0xb0, 0xec, 0xc3, 0x2d,
	0x06, 0x4a, 0xd6, 0xd7, 0xec, 0xd9, 0x69, 0x48, 0x6d, 0x33, 0x21, 0x6c, 0x71, 0x71, 0x99, 0x6d,
	0x4e, 0xa8, 0x0e, 0xc7, 0x10, 0xf4, 0x53, 0xa8, 0xc6, 0x9f, 0x8c, 0xd7, 0x88, 0x6c, 0xcd, 0xd6,
	0xb2, 0x0f, 0xf2, 0x95, 0x15, 0xfb, 0x7a, 0x12, 0x22, 0x1b, 0xb6, 0x2d, 0xcf, 0x8d, 0x02, 0x6f,
	0x3c, 0x26, 0x81, 0xe1, 0x9b, 0xd6, 0x6b, 0xc2, 0xb6, 0x32, 0x6d, 0x33, 0x32, 0xe5, 0x12, 0xdb,
	0xec, 0xb3, 0xc5, 0x7b, 0x27, 0xf8, 0x3e, 0x83, 0x9f, 0xc4, 0x68, 0x2c, 0x5b, 0x2b, 0x34, 0xe8,
	0x4b, 0x80, 0x4b, 0x73, 0x3c, 0x25, 0x46, 0x48, 0xa2, 0x50, 0x06, 0xb6, 0xeb, 0xa3, 0xf9, 0x5d,
	0x5f, 0x52, 0xfd, 0x80, 0x44, 0xb8, 0x74, 0x19, 0x8f, 0x42, 0xb4, 0x0f, 0xa5, 0x80, 0x8c, 0x9c,
	0x90, 0x5d, 0xac, 0xbc, 0x6c, 0x15, 0x8e, 0xd5, 0xf8, 0x1a, 0x48, 0xe9, 0x62, 0x3b, 0x23, 0x12,
	0x46, 0xa1, 0x5c, 0x59, 0x46, 0x97, 0x16, 0x53, 0xe2, 0x04, 0x44, 0xf1, 0xe4, 0x2a, 0x22, 0x81,
	0x1b, 0xca, 0xf6, 0x32, 0xbc, 0xc6, 0x94, 0x38, 0x01, 0xa1, 0x1f, 0x42, 0x89, 0xc6, 0x01, 0xa7,
	0xfb, 0xdf, 0x38, 0xdf, 0xe5, 0x05, 0xbe, 0xef, 0xeb, 0x6f, 0x7d, 0xc2, 0x28, 0x2f, 0x46, 0xf1,
	0x48, 0x39, 0x82, 0x6a, 0xcb, 0xb3, 0xa6, 0x13, 0xe2, 0x46, 0x26, 0x65, 0x1a, 0xda, 0x04, 0xe1,
	0x3c, 0x70, 0xc8, 0x90, 0xc5, 0x4c, 0x09, 0xf3, 0x09, 0xda, 0x81, 0xb2, 0x4d, 0x42, 0x2b, 0x70,
	0x7c, 0x0a, 0x92, 0xb3, 0x4c, 0x37, 0x2b, 0x52, 0xfe, 0x90, 0x83, 0x62, 0x1c, 0x51, 0x08, 0x41,
	0xde, 0x35, 0x27, 0x24, 0xde, 0x82, 0x8d, 0x91, 0x0c, 0xc5, 0x4b, 0x12, 0x84, 0xd7, 0xab, 0x93,
	0x29, 0x7a, 0x06, 0x39, 0xdb, 0xb3, 0xe4, 0x1c, 0x3b, 0xf3, 0x22, 0x29, 0x67, 0xcf, 0x86, 0x29,
	0x8e, 0x1e, 0xc5, 0x74, 0x5d, 0x8f, 0x8b, 0x78, 0x10, 0x95, 0xf0, 0xac, 0x08, 0xf5, 0x60, 0xf3,
	0x7a, 0x6a, 0x8c, 0x3d, 0x2b, 0x86, 0x72, 0x17, 0x3f, 0x99, 0xff, 0xc2, 0xc0, 0x9b, 0x06, 0x16,
	0xe9, 0xc4, 0x20, 0xbc, 0x71, 0xbd, 0x32, 0x91, 0x85, 0xf4, 0x3e, 0x66, 0x60, 0x5d, 0xc8, 0x02,
	0xbf, 0x0f, 0x1d, 0x23, 0x05, 0x2a, 0x5e, 0x30, 0x32, 0x5d, 0xe7, 0x1d, 0x03, 0xc9, 0x05, 0xa6,
	0x9b, 0x93, 0xd1, 0x3b, 0x53, 0xf6, 0x99, 0x56, 0x24, 0x17, 0xf9, 0x9d, 0xe3, 0x29, 0x92, 0x20,
	0x37, 0x0d, 0xc6, 0xb2, 0xc8, 0xa4, 0x74, 0x88, 0xce, 0xe0, 0x51, 0x18, 0x05, 0x53, 0x2b, 0x9a,
	0x06, 0xc4, 0x36, 0x66, 0x6f, 0xc8, 0xf9, 0xae, 0x2c, 0x1c, 0x3b, 0xc5, 0xaa, 0x29, 0x14, 0x3f,
	0x0c, 0x97, 0x48, 0x43, 0xe5, 0xb7, 0x59, 0x10, 0xfa, 0xfb, 0x6d, 0x3b, 0x54, 0xfe, 0x9b, 0x81,
	0x42, 0x3f, 0x20, 0x43, 0xe7, 0x0a, 0xdd, 0x87, 0xf2, 0x69, 0x77, 0xd0, 0xd7, 0x9a, 0xed, 0xc3,
	0xb6, 0xd6, 0x92, 0xee, 0x21, 0x80, 0x82, 0xda, 0xd4, 0xdb, 0xbd, 0xae, 0x94, 0x41, 0x25, 0x10,
	0x74, 0xf5, 0xa0, 0xa3, 0x49, 0x59, 0x54, 0x85, 0xd2, 0x4b, 0xb5, 0x73, 0xaa, 0x19, 0x03, 0x4d,
	0x97, 0x72, 0xe8, 0x21, 0x3c, 0x68, 0xf6, 0xba, 0x3a, 0xee, 0x75, 0x3a, 0x1a, 0x36, 0x8e, 0x35,
	0xb5, 0xa5, 0x61, 0x29, 0x4f, 0xc5, 0xfd, 0x81, 0x6a, 0x68, 0xaf, 0x74, 0x0d, 0x77, 0x07, 0xc6,
	0x40, 0x57, 0xb1, 0x2e, 0x49, 0x08, 0x41, 0x8d, 0xef, 0x69, 0xf4, 0x71, 0xef, 0xb0, 0xdd, 0xd1,
	0xa4, 0x07, 0xa8, 0x0c, 0xc5, 0x66, 0xef, 0xb4, 0xab, 0x6b, 0x58, 0x42, 0x14, 0xd0, 0x6a, 0x63,
	0xad, 0xa9, 0x1b, 0x89, 0x6c, 0x83, 0x7e, 0xfc, 0x44, 0xa3, 0xc3, 0x4d, 0x24, 0x41, 0x25, 0x56,
	0x73, 0xc9, 0x43, 0x54, 0x01, 0x11, 0x6b, 0x47, 0xed, 0x01, 0x9d, 0x3d, 0xa2, 0x67, 0x6e, 0xb5,
	0x8f, 0xb4, 0x81, 0x2e, 0x3d, 0x46, 0x32, 0x6c, 0xf4, 0xf4, 0x63, 0x0d, 0x2f, 0x1c, 0xe2, 0xd7,
	0x19, 0x24, 0x42, 0xee, 0x44, 0x7d, 0x25, 0xfd, 0x2f, 0xa3, 0xfc, 0x25, 0x0b, 0x62, 0x3f, 0x20,
	0xe6, 0xe4, 0x7c, 0x4c, 0x50, 0x0d, 0xb2, 0x8e, 0xcd, 0x38, 0x5a, 0xc5, 0x59, 0xc7, 0x4e, 0x59,
	0x9b, 0x9d, 0x61, 0xed, 0x26, 0x08, 0xe6, 0xd8, 0x31, 0x43, 0xc6, 0xce, 0x12, 0xe6, 0x93, 0x5b,
	0x50, 0xb0, 0xb8, 0x2e, 0x05, 0xe3, 0x20, 0x11, 0x6e, 0x18, 0x24, 0xab, 0xd9, 0x54, 0xb8, 0x2d,
	0x9b, 0x7e, 0x97, 0x81, 0x02, 0xcf, 0x3e, 0xe8, 0x53, 0xa8, 0xf1, 0xfc, 0x63, 0xf0, 0xdc, 0x93,
	0x58, 0xb3, 0xc2, 0xa5, 0x2c, 0xdd, 0xd8, 0x68, 0x17, 0xa4, 0x59, 0xd4, 0x8c, 0x8d, 0x6b, 0xd7,
	0xb8, 0x2e, 0xb5, 0xf6, 0x8f, 0xa1, 0xe4, 0xb8, 0x61, 0x64, 0xba, 0x16, 0x49, 0xaa, 0xea, 0x93,
	0x65, 0x69, 0xaf, 0x1d, 0x83, 0xf0, 0x35, 0x5c, 0x71, 0xa1, 0x36, 0xaf, 0x44, 0x7b, 0x20, 0xfa,
	0xb1, 0xaf, 0xe3, 0x06, 0x60, 0x21, 0x4f, 0x27, 0x4c, 0xc0, 0x29, 0x0e, 0xed, 0x42, 0x9e, 0x65,
	0xd0, 0x2c, 0xc3, 0x6f, 0xd6, 0x79, 0x17, 0x52, 0x4f, 0xba, 0x90, 0xba, 0xea, 0xbe, 0xc5, 0x0c,
	0xa1, 0xfc, 0x3d, 0x0f, 0x70, 0x62, 0x46, 0xd6, 0xc5, 0xa1, 0x43, 0xc6, 0xf6, 0x8d, 0xc8, 0xb4,
	0x40, 0x9b, 0xdc, 0x47, 0xc8, 0x5c, 0xdb, 0x20, 0x9e, 0x3b, 0xd1, 0x1b, 0xc7, 0x8e, 0x2e, 0xe4,
	0xfc, 0x4e, 0x66, 0x57, 0xc0, 0xe9, 0x1c, 0x35, 0x01, 0x26, 0xf4, 0x02, 0xcc, 0x2d, 0x8c, 0x59,
	0xb5, 0x45, 0x5e, 0x5c, 0x5f, 0x90, 0x0f, 0xa9, 0xa7, 0x8e, 0xef, 0xe1, 0xd2, 0x24, 0x99, 0xa0,
	0x1f, 0x80, 0xe4, 0x45, 0x17, 0x24, 0x30, 0x66, 0xb6, 0x62, 0xb9, 0xee, 0xf8, 0x1e, 0xae, 0x31,
	0x4d, 0xba, 0x30, 0xe1, 0x70, 0xe1, 0x86, 0x1c, 0x4e, 0x4a, 0x1a, 0xb3, 0xa3, 0xc8, 0x16, 0x6d,
	0x2d, 0x56, 0x34, 0x4a, 0x1b, 0x9b, 0x6e, 0xce, 0x4b, 0x1a, 0x63, 0xd1, 0x1d, 0x66, 0xd2, 0x97,
	0x50, 0xba, 0xbe, 0xce, 0x7b, 0x19, 0xb4, 0x04, 0x82, 0xf6, 0x4a, 0x6d, 0xea, 0x52, 0x16, 0x15,
	0x21, 0xd7, 0xe9, 0x9f, 0x48, 0x39, 0x9a, 0xed, 0x68, 0x36, 0x52, 0xf1, 0x99, 0x94, 0xa7, 0x00,
	0xac, 0x76, 0x8f, 0x34, 0x49, 0xa0, 0x79, 0xac, 0xd7, 0xa7, 0x99, 0x51, 0xed, 0x48, 0x85, 0x83,
	0x22, 0x08, 0xcc, 0x7e, 0xca, 0x3f, 0xf2, 0x20, 0xb0, 0x3e, 0x73, 0x2d, 0xf6, 0xfe, 0x04, 0x2a,
	0xdc, 0x0d, 0x43, 0xea, 0xb2, 0xa4, 0x8d, 0x95, 0x57, 0xf9, 0x14, 0x97, 0x27, 0xe9, 0x38, 0x44,
	0x3f, 0x82, 0x72, 0xdc, 0xa0, 0x06, 0x64, 0x98, 0x84, 0xdf, 0xe3, 0xa5, 0x4d, 0x2d, 0x19, 0x62,
	0x30, 0x93, 0x61, 0x88, 0xbe, 0x84, 0xc7, 0x96, 0xe7, 0x86, 0x91, 0x61, 0x93, 0xa1, 0x39, 0x1d,
	0x47, 0x46, 0xbc, 0x8f, 0x63, 0x33, 0xce, 0x55, 0xf1, 0x26, 0x53, 0xb7, 0xb8, 0x96, 0xef, 0xd1,
	0xb6, 0xd1, 0x53, 0x78, 0xe0, 0x4c, 0xfc, 0x31, 0x49, 0xdd, 0x4e, 0x17, 0x14, 0xd8, 0x02, 0x69,
	0x5e, 0xd1, 0xb6, 0x51, 0x1d, 0x36, 0xe2, 0x96, 0x32, 0x20, 0x21, 0x23, 0xbe, 0xe1, 0xd8, 0x3c,
	0x9f, 0x56, 0xf1, 0x03, 0xae, 0xc2, 0xb1, 0xa6, 0x6d, 0xb3, 0x92, 0x1d, 0x3a, 0xef, 0x38, 0x6f,
	0x72, 0x98, 0x8d, 0xd1, 0x2f, 0xe1, 0xa1, 0x63, 0x8f, 0x89, 0x11, 0x39, 0x13, 0xe2, 0x4d, 0x23,
	0xe3, 0x9c, 0x5c, 0x98, 0x97, 0x8e, 0x17, 0xc8, 0x25, 0xc6, 0xfd, 0xef, 0x2f, 0x69, 0xf7, 0xeb,
	0x6d, 0x7b, 0x4c, 0x74, 0x8e, 0x3f, 0x88, 0xe1, 0x78, 0xc3, 0x79, 0x5f, 0x48, 0x73, 0xa1, 0x13,
	0x1a, 0xdc, 0x0e, 0xec, 0x27, 0x82, 0x0c, 0x3b, 0x99, 0x5d, 0x11, 0x57, 0x9c, 0xb0, 0x49, 0x85,
	0xdc, 0xab, 0x3f, 0x4b, 0xc2, 0xc5, 0x0f, 0x3c, 0x9f, 0x04, 0x91, 0x43, 0x68, 0x7f, 0xb7, 0x3a,
	0xd7, 0xdc, 0x67, 0xe8, 0x7e, 0x0a, 0x56, 0x5e, 0xc0, 0xc6, 0x92, 0x23, 0xa1, 0x1a, 0x40, 0xb7,
	0x67, 0xe8, 0xed, 0x13, 0xad, 0x77, 0xaa, 0x4b, 0xf7, 0x68, 0x5d, 0xed, 0xf6, 0xf4, 0xf6, 0xe1,
	0x99, 0x11, 0x57, 0x6b, 0x29, 0xa3, 0xfc, 0x33, 0x0b, 0xa5, 0xd4, 0x81, 0xef, 0x25, 0xac, 0x2f,
	0x40, 0x08, 0x2d, 0xcf, 0x27, 0xac, 0xd2, 0xd5, 0xf6, 0xbe, 0xb3, 0xc2, 0xf1, 0xf5, 0x01, 0x05,
	0x61, 0x8e, 0x5d, 0xcc, 0x68, 0xd9, 0x9b, 0x67, 0x34, 0x61, 0xdd, 0x8c, 0xb6, 0x3a, 0xba, 0xf3,
	0xb7, 0x8d, 0xee, 0x9f, 0x83, 0xc0, 0x6e, 0x47, 0xbb, 0x19, 0xd6, 0xfe, 0x18, 0x6a, 0xb7, 0x65,
	0xb4, 0xb4, 0x43, 0xf5, 0xb4, 0x43, 0x8d, 0x5a, 0x03, 0xe0, 0xe2, 0x5e, 0xb7, 0x73, 0x26, 0x65,
	0x58, 0x77, 0xc2, 0x95, 0x5c, 0x92, 0x55, 0xfe, 0x9d, 0x83, 0x02, 0x37, 0xd5, 0x5a, 0xf1, 0xbb,
	0x07, 0x05, 0xdf, 0x0c, 0xcc, 0x49, 0x12, 0xb9, 0xdb, 0xcb, 0x9c, 0x50, 0xef, 0x53, 0x08, 0x8e,
	0x91, 0xdb, 0xff, 0xa1, 0xcd, 0x1d, 0x1d, 0xde, 0x71, 0x09, 0x12, 0xef, 0xa2, 0x04, 0x7d, 0xcb,
	0xae, 0x66, 0xae, 0x22, 0x14, 0x3e, 0x44, 0x45, 0x28, 0xde, 0x96, 0x33, 0x7f, 0xce, 0x40, 0x75,
	0xee, 0x27, 0xfb, 0x5a, 0x8e, 0xff, 0x04, 0x4a, 0x2c, 0x67, 0xb0, 0x9c, 0x96, 0x65, 0x39, 0x4d,
	0x64, 0x02, 0x9a, 0xca, 0xbe, 0x07, 0xd5, 0x37, 0x4e, 0x74, 0x61, 0x84, 0x64, 0x4c, 0xac, 0xc8,
	0x0b, 0x58, 0x84, 0x8a, 0xb8, 0x42, 0x85, 0x83, 0x58, 0x96, 0xe6, 0xbb, 0xfc, 0x4c, 0xbe, 0xfb,
	0x14, 0x6a, 0x13, 0xf3, 0xca, 0x18, 0x05, 0xde, 0xd4, 0x37, 0x98, 0x56, 0x60, 0xf6, 0xaf, 0x4c,
	0xcc, 0xab, 0x23, 0x2a, 0x1c, 0x38, 0xef, 0x88, 0xf2, 0x2b, 0x28, 0xc7, 0xbf, 0xf2, 0x07, 0x3e,
	0xb1, 0xd0, 0x1e, 0xe4, 0xa7, 0xae, 0x13, 0xb1, 0xa3, 0xd7, 0xf6, 0xbe, 0xbb, 0xf4, 0x75, 0x81,
	0x02, 0xeb, 0xa7, 0xae, 0x13, 0x61, 0x86, 0x55, 0x5e, 0x40, 0x9e, 0xce, 0x96, 0x56, 0xc4, 0x83,
	0x33, 0x5d, 0x1b, 0x48, 0x19, 0x5a, 0x08, 0xfb, 0x6a, 0xf3, 0x2b, 0x4d, 0x1f, 0x48, 0x59, 0x24,
	0x42, 0xfe, 0xa0, 0xa7, 0x1f, 0x4b, 0x39, 0xe5, 0xaf, 0x19, 0x28, 0xc6, 0xbb, 0xae, 0x65, 0xb9,
	0x67, 0x90, 0x0f, 0x7d, 0x62, 0xc5, 0x0d, 0xdb, 0xd6, 0xca, 0xe3, 0x62, 0x06, 0x4b, 0xcd, 0x94,
	0x9b, 0x31, 0x93, 0x0a, 0xf7, 0x1d, 0xd7, 0x26, 0x57, 0x33, 0xed, 0x69, 0xfe, 0x9b, 0xb8, 0x55,
	0x65, 0x2b, 0x92, 0xc6, 0x55, 0xf9, 0x63, 0x06, 0xaa, 0x73, 0xef, 0x27, 0x1f, 0xe3, 0x2e, 0x9f,
	0xa5, 0x0f, 0x3b, 0x09, 0x77, 0xd8, 0xb5, 0xaa, 0x38, 0x7e, 0x7c, 0xd1, 0x39, 0x81, 0x14, 0x17,
	0x4a, 0xec, 0x5d, 0x85, 0xb9, 0xf7, 0xf3, 0x39, 0xf7, 0x3e, 0x59, 0xf2, 0x8a, 0xb3, 0xe8, 0xdc,
	0xc6, 0xb7, 0x74, 0x2e, 0x0d, 0x09, 0x81, 0xed, 0xb4, 0x96, 0x11, 0x9e, 0xce, 0x19, 0xe1, 0xf1,
	0x8a, 0x03, 0xde, 0xad, 0x3b, 0x7f, 0x9f, 0x81, 0xf2, 0xcc, 0xeb, 0xd4, 0xdd, 0xdf, 0xe3, 0xa6,
	0xae, 0xfc, 0x57, 0x0e, 0xe4, 0x55, 0x2f, 0x5d, 0x6b, 0x9d, 0xf2, 0x2b, 0x10, 0xd3, 0x77, 0x35,
	0x5e, 0x73, 0x1a, 0x37, 0x7b, 0x57, 0xab, 0xa7, 0x0f, 0x6c, 0xe9, 0x06, 0xdb, 0x5f, 0x67, 0x41,
	0x4c, 0x4f, 0x73, 0xb7, 0xd5, 0xa8, 0x78, 0x17, 0xd5, 0x68, 0xae, 0xbc, 0x08, 0x1f, 0xa2, 0xbc,
	0xdc, 0xfa, 0xc7, 0xf6, 0x6f, 0x32, 0x20, 0x26, 0x8f, 0x90, 0x6b, 0x39, 0xb8, 0x1e, 0xff, 0xb2,
	0xf8, 0xc6, 0xdf, 0x02, 0x1c, 0x36, 0x17, 0x51, 0x02, 0x8f, 0x28, 0xe5, 0xeb, 0x0c, 0x88, 0xc9,
	0x9b, 0xe6, 0x5a, 0x87, 0x78, 0x11, 0x1b, 0x76, 0x26, 0x20, 0x9e, 0x2c, 0x1a, 0xb6, 0x65, 0x46,
	0x26, 0xb5, 0x2b, 0x8b, 0x0a, 0x66, 0xdb, 0xc1, 0x62, 0x84, 0x0b, 0x1f, 0x2e, 0xc2, 0xdf, 0x40,
	0x81, 0xbf, 0xb8, 0x7e, 0xe4, 0xfb, 0x1c, 0x3c, 0xfb, 0xc5, 0xd3, 0x91, 0x13, 0x5d, 0x4c, 0xcf,
	0xeb, 0x96, 0x37, 0x69, 0xf8, 0xfb, 0x63, 0xd3, 0x1d, 0x35, 0xfc, 0xfd, 0x60, 0xea, 0xd2, 0x5f,
	0x25, 0x8d, 0x91, 0xd7, 0x98, 0xfd, 0x77, 0xe3, 0xbc, 0xc0, 0x7e, 0x0d, 0x7c, 0xf1, 0xff, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x94, 0x0c, 0x5f, 0x3b, 0x38, 0x19, 0x00, 0x00,
}
